(()=>{"use strict";var n={904:(n,e,t)=>{t.d(e,{c:()=>A});var o=t(648),a=t.n(o),r=t(312),i=t.n(r)()(a());i.push([n.id,'* {\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n}\n\nbody {\n    font-size: 16px;\n    height: 100vh;\n    width: 100vw;\n    margin: 0;\n    \n    display: grid;\n    grid-template: auto 1fr auto / 1fr 4fr;\n    grid-auto-rows: 0;\n}\n\nbutton {\n    cursor: pointer;\n}\n\n.overlay {\n    position: fixed;\n    opacity: 0;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n    pointer-events: none;\n    transition: 200ms ease-in-out;\n}\n\n.overlay.active {\n    opacity: 1;\n    pointer-events: all;\n}\n\n/* ---------------------------- HEADER ---------------------------- */\n\nheader {\n    background-color: firebrick;\n    padding: 20px 30px;\n\n    display: flex;\n    justify-content: space-between;\n\n    grid-area: 1 / 1 / 2 / 3;\n}\n\nheader div:first-child {\n    display: flex;\n    align-items: center;\n    gap: 20px;\n}\n\nheader div:first-child img {\n    width: 24px;\n    height: auto;\n}\n\n.site-logo {\n    width: 200px;\n    height: auto;\n}\n\n.dark-mode-toggle {\n\n}\n\n/* ---------------------------- SIDEBAR ---------------------------- */\n\n.sidebar {\n    background-color: #DDDDDD;\n    padding: 20px 24px;\n\n    grid-area: 2 / 1 / 3 / 2;\n\n    display: flex;\n    flex-direction: column;\n    gap: 40px;\n}\n\n.sidebar button {\n    background: none;\n    border: none;\n    cursor: pointer;\n}\n\n.sidebar h2 {\n    font-size: 1.6rem;\n    margin: 0;\n}\n\n.sidebar .section-header {\n    display: block;\n    margin: 21px 0 16px;\n}\n\n.section-header-content {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.sidebar .section-header img {\n    width: 20px;\n    height: auto;\n}\n\n.sidebar .section-header::after {\n    content: "";\n    display: block;\n    width: 100%;\n    height: 3px;\n    background-color: black;\n    margin-top: 14px;\n}\n\n.sidebar button.project-list {\n    background: none;\n    border: none;\n    font-size: 1rem;\n    width: 100%;\n    padding: 17px 13px;\n\n    display: flex;\n    align-items: center;\n    gap: 14px;\n}\n\n.sidebar button.project-list:hover {\n    background-color: #CCCCCC;\n}\n\n.sidebar .nav-icon {\n    width: 21px;\n    height: auto;\n}\n\n.sidebar .button-title {\n    margin: 0;\n}\n\n/* ---------------------------- CONTENT ---------------------------- */\n\nsection {\n    padding: 100px 0 0 0;\n    \n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 20px;\n    \n    grid-area: 2 / 2 / 3 / 3;\n}\n\nsection > div {\n    width: min(80%, 800px);\n\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.task-card {\n    border: none;\n    border-bottom: 1px solid #D3D3D3;\n    background: none;\n    width: 100%;\n    padding: 0 0 10px 0;\n    \n    display: grid;\n    grid-template: auto auto / auto 1fr;\n    column-gap: 15px;\n    row-gap: 15px;\n}\n\n.task-checkbox {\n    padding: 9px;\n    border-radius: 20px;\n    border: 1px solid #2c2c2c;\n    \n    grid-area: 1 / 1 / 3 / 2;\n}\n\n.task-title {\n    margin: 0;\n    justify-self: start;\n    \n    grid-area: 1 / 2 / 2 / 3;\n}\n\n.task-info-labels {\n    display: grid;\n    grid-template-columns: auto 1fr auto;\n    column-gap: 10px;\n    \n    grid-area: 2 / 2 / 3 / 3;\n}\n\n.task-info-labels button {\n    border: none;\n    background: none;\n}\n\n.task-due-date {\n    padding: 0;\n}\n\n.task-labels {\n    display: flex;\n    justify-content: start;\n    gap: 10px;\n}\n\n.task-labels button {\n    padding: 0;\n\n    display: flex;\n    align-items: center;\n    gap: 5px;\n}\n\n.task-labels button img {\n    width: 15px;\n    height: auto;\n}\n\n.task-labels button p {\n    color: #294C29;\n    font-size: 0.8rem;\n    margin: 0;\n}\n\n.task-project {\n    \n}\n\n/* ----------------------------- MODAL ----------------------------- */\n\n.overlay {\n    position: fixed;\n    opacity: 0;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n    pointer-events: none;\n    transition: 200ms ease-in-out;\n}\n\n#overlay.active {\n    opacity: 1;\n    pointer-events: all;\n}\n\n.modal {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%) scale(0);\n    transition: 200ms ease-in-out;\n    border-radius: 10px;\n    z-index: 10;\n    background-color: whitesmoke;\n    width: 300px;\n    max-width: 80%;\n    padding: 20px 25px;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 20px;\n}\n\n.modal.active {\n    transform: translate(-50%, -50%) scale(1);\n}\n\n/* ---------------------------- FOOTER ---------------------------- */\n\nfooter {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: black;\n    color: white;\n    \n    grid-area: 3 / 1 / 4 / 3;\n}\n\nfooter a {\n    text-decoration: none;\n    \n    display: flex;\n    gap: 8px;\n    align-items: center;\n    justify-content: center;\n}\n\nfooter a p {\n    text-decoration: none;\n    color: white;\n}\n\nfooter img {\n    width: 30px;\n    height: auto;\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,2BAA2B;IAC3B,8BAA8B;AAClC;;AAEA;IACI,eAAe;IACf,aAAa;IACb,YAAY;IACZ,SAAS;;IAET,aAAa;IACb,sCAAsC;IACtC,iBAAiB;AACrB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,eAAe;IACf,UAAU;IACV,MAAM;IACN,OAAO;IACP,QAAQ;IACR,SAAS;IACT,oCAAoC;IACpC,oBAAoB;IACpB,6BAA6B;AACjC;;AAEA;IACI,UAAU;IACV,mBAAmB;AACvB;;AAEA,qEAAqE;;AAErE;IACI,2BAA2B;IAC3B,kBAAkB;;IAElB,aAAa;IACb,8BAA8B;;IAE9B,wBAAwB;AAC5B;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,YAAY;AAChB;;AAEA;;AAEA;;AAEA,sEAAsE;;AAEtE;IACI,yBAAyB;IACzB,kBAAkB;;IAElB,wBAAwB;;IAExB,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,gBAAgB;IAChB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,iBAAiB;IACjB,SAAS;AACb;;AAEA;IACI,cAAc;IACd,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,WAAW;IACX,cAAc;IACd,WAAW;IACX,WAAW;IACX,uBAAuB;IACvB,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,YAAY;IACZ,eAAe;IACf,WAAW;IACX,kBAAkB;;IAElB,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,SAAS;AACb;;AAEA,sEAAsE;;AAEtE;IACI,oBAAoB;;IAEpB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,SAAS;;IAET,wBAAwB;AAC5B;;AAEA;IACI,sBAAsB;;IAEtB,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,gCAAgC;IAChC,gBAAgB;IAChB,WAAW;IACX,mBAAmB;;IAEnB,aAAa;IACb,mCAAmC;IACnC,gBAAgB;IAChB,aAAa;AACjB;;AAEA;IACI,YAAY;IACZ,mBAAmB;IACnB,yBAAyB;;IAEzB,wBAAwB;AAC5B;;AAEA;IACI,SAAS;IACT,mBAAmB;;IAEnB,wBAAwB;AAC5B;;AAEA;IACI,aAAa;IACb,oCAAoC;IACpC,gBAAgB;;IAEhB,wBAAwB;AAC5B;;AAEA;IACI,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,UAAU;;IAEV,aAAa;IACb,mBAAmB;IACnB,QAAQ;AACZ;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,cAAc;IACd,iBAAiB;IACjB,SAAS;AACb;;AAEA;;AAEA;;AAEA,sEAAsE;;AAEtE;IACI,eAAe;IACf,UAAU;IACV,MAAM;IACN,OAAO;IACP,QAAQ;IACR,SAAS;IACT,oCAAoC;IACpC,oBAAoB;IACpB,6BAA6B;AACjC;;AAEA;IACI,UAAU;IACV,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,QAAQ;IACR,SAAS;IACT,yCAAyC;IACzC,6BAA6B;IAC7B,mBAAmB;IACnB,WAAW;IACX,4BAA4B;IAC5B,YAAY;IACZ,cAAc;IACd,kBAAkB;;IAElB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,yCAAyC;AAC7C;;AAEA,qEAAqE;;AAErE;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,uBAAuB;IACvB,YAAY;;IAEZ,wBAAwB;AAC5B;;AAEA;IACI,qBAAqB;;IAErB,aAAa;IACb,QAAQ;IACR,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA;IACI,qBAAqB;IACrB,YAAY;AAChB;;AAEA;IACI,WAAW;IACX,YAAY;AAChB",sourcesContent:['* {\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n}\n\nbody {\n    font-size: 16px;\n    height: 100vh;\n    width: 100vw;\n    margin: 0;\n    \n    display: grid;\n    grid-template: auto 1fr auto / 1fr 4fr;\n    grid-auto-rows: 0;\n}\n\nbutton {\n    cursor: pointer;\n}\n\n.overlay {\n    position: fixed;\n    opacity: 0;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n    pointer-events: none;\n    transition: 200ms ease-in-out;\n}\n\n.overlay.active {\n    opacity: 1;\n    pointer-events: all;\n}\n\n/* ---------------------------- HEADER ---------------------------- */\n\nheader {\n    background-color: firebrick;\n    padding: 20px 30px;\n\n    display: flex;\n    justify-content: space-between;\n\n    grid-area: 1 / 1 / 2 / 3;\n}\n\nheader div:first-child {\n    display: flex;\n    align-items: center;\n    gap: 20px;\n}\n\nheader div:first-child img {\n    width: 24px;\n    height: auto;\n}\n\n.site-logo {\n    width: 200px;\n    height: auto;\n}\n\n.dark-mode-toggle {\n\n}\n\n/* ---------------------------- SIDEBAR ---------------------------- */\n\n.sidebar {\n    background-color: #DDDDDD;\n    padding: 20px 24px;\n\n    grid-area: 2 / 1 / 3 / 2;\n\n    display: flex;\n    flex-direction: column;\n    gap: 40px;\n}\n\n.sidebar button {\n    background: none;\n    border: none;\n    cursor: pointer;\n}\n\n.sidebar h2 {\n    font-size: 1.6rem;\n    margin: 0;\n}\n\n.sidebar .section-header {\n    display: block;\n    margin: 21px 0 16px;\n}\n\n.section-header-content {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.sidebar .section-header img {\n    width: 20px;\n    height: auto;\n}\n\n.sidebar .section-header::after {\n    content: "";\n    display: block;\n    width: 100%;\n    height: 3px;\n    background-color: black;\n    margin-top: 14px;\n}\n\n.sidebar button.project-list {\n    background: none;\n    border: none;\n    font-size: 1rem;\n    width: 100%;\n    padding: 17px 13px;\n\n    display: flex;\n    align-items: center;\n    gap: 14px;\n}\n\n.sidebar button.project-list:hover {\n    background-color: #CCCCCC;\n}\n\n.sidebar .nav-icon {\n    width: 21px;\n    height: auto;\n}\n\n.sidebar .button-title {\n    margin: 0;\n}\n\n/* ---------------------------- CONTENT ---------------------------- */\n\nsection {\n    padding: 100px 0 0 0;\n    \n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 20px;\n    \n    grid-area: 2 / 2 / 3 / 3;\n}\n\nsection > div {\n    width: min(80%, 800px);\n\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.task-card {\n    border: none;\n    border-bottom: 1px solid #D3D3D3;\n    background: none;\n    width: 100%;\n    padding: 0 0 10px 0;\n    \n    display: grid;\n    grid-template: auto auto / auto 1fr;\n    column-gap: 15px;\n    row-gap: 15px;\n}\n\n.task-checkbox {\n    padding: 9px;\n    border-radius: 20px;\n    border: 1px solid #2c2c2c;\n    \n    grid-area: 1 / 1 / 3 / 2;\n}\n\n.task-title {\n    margin: 0;\n    justify-self: start;\n    \n    grid-area: 1 / 2 / 2 / 3;\n}\n\n.task-info-labels {\n    display: grid;\n    grid-template-columns: auto 1fr auto;\n    column-gap: 10px;\n    \n    grid-area: 2 / 2 / 3 / 3;\n}\n\n.task-info-labels button {\n    border: none;\n    background: none;\n}\n\n.task-due-date {\n    padding: 0;\n}\n\n.task-labels {\n    display: flex;\n    justify-content: start;\n    gap: 10px;\n}\n\n.task-labels button {\n    padding: 0;\n\n    display: flex;\n    align-items: center;\n    gap: 5px;\n}\n\n.task-labels button img {\n    width: 15px;\n    height: auto;\n}\n\n.task-labels button p {\n    color: #294C29;\n    font-size: 0.8rem;\n    margin: 0;\n}\n\n.task-project {\n    \n}\n\n/* ----------------------------- MODAL ----------------------------- */\n\n.overlay {\n    position: fixed;\n    opacity: 0;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n    pointer-events: none;\n    transition: 200ms ease-in-out;\n}\n\n#overlay.active {\n    opacity: 1;\n    pointer-events: all;\n}\n\n.modal {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%) scale(0);\n    transition: 200ms ease-in-out;\n    border-radius: 10px;\n    z-index: 10;\n    background-color: whitesmoke;\n    width: 300px;\n    max-width: 80%;\n    padding: 20px 25px;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 20px;\n}\n\n.modal.active {\n    transform: translate(-50%, -50%) scale(1);\n}\n\n/* ---------------------------- FOOTER ---------------------------- */\n\nfooter {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: black;\n    color: white;\n    \n    grid-area: 3 / 1 / 4 / 3;\n}\n\nfooter a {\n    text-decoration: none;\n    \n    display: flex;\n    gap: 8px;\n    align-items: center;\n    justify-content: center;\n}\n\nfooter a p {\n    text-decoration: none;\n    color: white;\n}\n\nfooter img {\n    width: 30px;\n    height: auto;\n}'],sourceRoot:""}]);const A=i},312:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,a,r){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(i[s]=!0)}for(var d=0;d<n.length;d++){var c=[].concat(n[d]);o&&i[c[0]]||(void 0!==r&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=r),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),a&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=a):c[4]="".concat(a)),e.push(c))}},e}},648:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(a," */");return[e].concat([r]).join("\n")}return[e].join("\n")}},596:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var r={},i=[],A=0;A<n.length;A++){var s=n[A],d=o.base?s[0]+o.base:s[0],c=r[d]||0,l="".concat(d," ").concat(c);r[d]=c+1;var p=t(l),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=a(u,o);o.byIndex=A,e.splice(A,0,{identifier:l,updater:m,references:1})}i.push(l)}return i}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var r=o(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<r.length;i++){var A=t(r[i]);e[A].references--}for(var s=o(n,a),d=0;d<r.length;d++){var c=t(r[d]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}r=s}}},176:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},808:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},120:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},520:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},936:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var a=e[o];if(void 0!==a)return a.exports;var r=e[o]={id:o,exports:{}};return n[o](r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");if(o.length)for(var a=o.length-1;a>-1&&!n;)n=o[a--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{const n=t.p+"d34d4ca6fe13822869cf.png",e=t.p+"8bd394fe4a75758835b7.png",o=t.p+"4c27d32139ea0789a49d.png",a=t.p+"d08f152b337f95957671.png",r=t.p+"a9004bf4b1008df3c369.png",i=t.p+"15861cfbc1f6bbf1008b.png",A=t.p+"dd56fb41e9c13dd32065.png",s=t.p+"2e069029dc4ce2839da1.png",d=t.p+"8835a517234a229acd4a.png";function c(){return localStorage.getItem("allProjects")?JSON.parse(localStorage.getItem("allProjects")):void 0}function l(){null!=document.querySelector(".sidebar")&&document.querySelector(".sidebar").remove();const n=document.createElement("nav");n.classList.add("sidebar");const e=document.createElement("div"),t=document.createElement("div");t.classList.add("section-header"),e.appendChild(t);const o=document.createElement("div");o.classList.add("section-header-content"),t.appendChild(o);const a=document.createElement("h2");a.textContent="Home",o.appendChild(a),t.appendChild(o),e.appendChild(t);const l=["All tasks","Today","This week"],p=[r,i,A];for(let n=0;n<l.length;n++){const t=document.createElement("button");t.classList.add("project-list");const o=new Image;o.src=p[n],o.classList.add("nav-icon");const a=document.createElement("p");a.textContent=`${l[n]}`,a.classList.add("button-title"),t.appendChild(o),t.appendChild(a),e.appendChild(t)}const u=document.createElement("div"),m=document.createElement("div");m.classList.add("section-header");const C=document.createElement("div");C.classList.add("section-header-content"),m.appendChild(C);const g=document.createElement("h2");g.textContent="Your Projects",C.appendChild(g);const b=document.createElement("button");b.setAttribute("data-modal-target","#add-project-modal");const h=new Image;return h.src=d,b.addEventListener("click",(()=>{!function(n){const e=document.querySelector(".overlay");null!=n&&(n.classList.add("active"),e.classList.add("active"))}(document.querySelector("#add-project-modal"))})),b.appendChild(h),C.appendChild(b),u.appendChild(m),c()&&c().map((n=>n.title)).forEach((n=>{const e=document.createElement("button");e.classList.add("project-list");const t=new Image;t.src=s,t.classList.add("nav-icon");const o=document.createElement("p");o.textContent=n,o.classList.add("button-title"),e.appendChild(t),e.appendChild(o),u.appendChild(e)})),n.appendChild(e),n.appendChild(u),n}const p=t.p+"b395302003c62cd3c818.png";function u(n){const e=document.querySelector(".overlay.active");null!=n&&(n.classList.remove("active"),e.classList.remove("active"))}const m={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let C;const g=new Uint8Array(16);function b(){if(!C&&(C="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!C))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return C(g)}const h=[];for(let n=0;n<256;++n)h.push((n+256).toString(16).slice(1));const f=function(n,e,t){if(m.randomUUID&&!e&&!n)return m.randomUUID();const o=(n=n||{}).random||(n.rng||b)();if(o[6]=15&o[6]|64,o[8]=63&o[8]|128,e){t=t||0;for(let n=0;n<16;++n)e[t+n]=o[n];return e}return function(n,e=0){return h[n[e+0]]+h[n[e+1]]+h[n[e+2]]+h[n[e+3]]+"-"+h[n[e+4]]+h[n[e+5]]+"-"+h[n[e+6]]+h[n[e+7]]+"-"+h[n[e+8]]+h[n[e+9]]+"-"+h[n[e+10]]+h[n[e+11]]+h[n[e+12]]+h[n[e+13]]+h[n[e+14]]+h[n[e+15]]}(o)},I={addTask(n){this.tasks.push(n)}},B={removeTask(n){let e=this.tasks.findIndex((e=>e.id==n.id));-1!=e&&this.tasks.splice(e,1)}};class x{constructor(n){const e=f();Object.defineProperty(this,"id",{value:e,writable:!1,enumerable:!0,configurable:!1}),this.title=n,this.tasks=[]}}Object.assign(x.prototype,I),Object.assign(x.prototype,B);let y=[];function E(n){const e=new x(n);return function(n){console.log(y),y.push(n),localStorage.setItem("allProjects",JSON.stringify(y))}(e),e}const v=t.p+"e3a9649561cdc6abb958.png",k={addLabel(n){this.labels.push(n)}};class w{constructor(n,e,t,o){const a=f();Object.defineProperty(this,"id",{value:a,writable:!1,enumerable:!0,configurable:!1}),this.title=n,this.description=e,this.dueDate=new Date(t),this.priority=o,this.labels=[],this.associatedProject,this.completed=!1}}Object.assign(w.prototype,k);let S=[];function j(n,e,t,o){const a=new w(n,e,new Date(t),o);return function(n){console.log(S),S.push(n),localStorage.setItem("allTasks",JSON.stringify(S))}(a),a}var L=t(596),T=t.n(L),D=t(520),Y=t.n(D),U=t(176),O=t.n(U),z=t(120),W=t.n(z),q=t(808),R=t.n(q),M=t(936),P=t.n(M),N=t(904),X={};X.styleTagTransform=P(),X.setAttributes=W(),X.insert=O().bind(null,"head"),X.domAPI=Y(),X.insertStyleElement=R(),T()(N.c,X),N.c&&N.c.locals&&N.c.locals,function(){const t=document.querySelector("body"),r=E("Test Project"),i=(E("Test Project 2"),j("Sample Task 1","This is the first test task.",new Date,"High")),A=j("Sample Task 2","This is the second test task.",new Date,"Low");i.addLabel("Test label 1"),i.addLabel("Test label 2"),A.addLabel("Test label 1"),A.addLabel("Test label 2"),r.addTask(i),r.addTask(A),console.log(i),console.log(r),t.appendChild(function(){const t=document.createElement("header"),r=new Image,i=new Image,A=new Image;r.src=n,i.src=e,A.src=o;const s=document.createElement("div");s.appendChild(r),s.appendChild(A);const d=new Image;d.src=a,d.classList.add("site-logo");const c=document.createElement("button");return c.classList.add("dark-mode-toggle"),t.appendChild(s),t.appendChild(d),t.appendChild(c),t}()),t.appendChild(l()),t.appendChild(function(n){const e=document.createElement("section"),t=document.createElement("h2");t.classList.add("project-title"),t.textContent=`${n.title}`;const o=document.createElement("div");return n.tasks.forEach((e=>{const t=document.createElement("button");t.classList.add("task-card");const a=document.createElement("button");a.classList.add("task-checkbox"),t.appendChild(a);const r=document.createElement("h3");r.classList.add("task-title"),r.textContent=`${e.title}`,t.appendChild(r);const i=document.createElement("div");i.classList.add("task-info-labels"),t.appendChild(i);const A=document.createElement("button");var s;A.classList.add("task-due-date"),A.textContent=`${(s=e.dueDate).getDate().toString().padStart(2,"0")} ${s.toLocaleString("en-sg",{month:"short"})} '${s.getFullYear().toString().substr(-2)}`,i.appendChild(A);const d=document.createElement("div");d.classList.add("task-labels"),e.labels.forEach((n=>{const e=document.createElement("button"),t=new Image;t.src=p,e.appendChild(t);const o=document.createElement("p");o.textContent=n,e.appendChild(o),d.appendChild(e)})),i.appendChild(d);const c=document.createElement("button");c.classList.add("task-project"),c.textContent=n.title,i.appendChild(c),o.appendChild(t)})),e.appendChild(t),e.appendChild(o),e}(r)),t.appendChild(function(){const n=document.createElement("footer"),e=document.createElement("a");e.setAttribute("href","https://github.com/reezuan"),e.setAttribute("target","_blank"),e.setAttribute("rel","noopener noreferrer");const t=document.createElement("p");t.textContent="Made by reezuan",e.appendChild(t);const o=new Image;return o.src=v,o.setAttribute("alt","Github logo"),e.appendChild(o),n.appendChild(e),n}()),t.appendChild(function(){const n=document.createElement("div");return n.classList.add("overlay"),n.addEventListener("click",(()=>{document.querySelectorAll(".modal.active").forEach((n=>{u(n)}))})),n}()),t.appendChild(function(){const n=document.createElement("div");n.setAttribute("id","add-project-modal"),n.classList.add("modal");const e=document.createElement("h2");e.textContent="Add a new project",n.appendChild(e);const t=document.createElement("form");n.appendChild(t);const o=document.createElement("label");o.setAttribute("for","project-title"),t.appendChild(o);const a=document.createElement("input");a.setAttribute("type","text"),a.setAttribute("id","project-title"),a.setAttribute("name","project-title"),t.appendChild(a);const r=document.createElement("button");r.textContent="Cancel",r.setAttribute("type","button"),t.appendChild(r),r.addEventListener("click",(()=>{u(t.closest(".modal")),t.reset()}));const i=document.createElement("button");return i.textContent="Create project",i.setAttribute("type","submit"),t.appendChild(i),t.addEventListener("submit",(n=>{let e=document.querySelector("#project-title");const o=document.querySelector("body");n.preventDefault(),E(e.value),u(t.closest(".modal")),t.reset(),o.appendChild(l())})),n}())}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,