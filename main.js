(()=>{"use strict";var n={904:(n,t,e)=>{e.d(t,{c:()=>s});var o=e(648),r=e.n(o),a=e(312),i=e.n(a)()(r());i.push([n.id,'* {\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n}\n\nbody {\n    font-size: 16px;\n    height: 100vh;\n    width: 100vw;\n    margin: 0;\n    \n    display: grid;\n    grid-template: auto 1fr auto / 1fr 4fr;\n    grid-auto-rows: 0;\n}\n\n/* ---------------------------- HEADER ---------------------------- */\n\nheader {\n    background-color: firebrick;\n    padding: 20px 30px;\n\n    display: flex;\n    justify-content: space-between;\n\n    grid-area: 1 / 1 / 2 / 3;\n}\n\nheader div:first-child {\n    display: flex;\n    align-items: center;\n    gap: 20px;\n}\n\nheader div:first-child img {\n    width: 24px;\n    height: auto;\n}\n\n.site-logo {\n    width: 200px;\n    height: auto;\n}\n\n.dark-mode-toggle {\n\n}\n\n/* ---------------------------- SIDEBAR ---------------------------- */\n\n.sidebar {\n    background-color: #DDDDDD;\n    padding: 20px 24px;\n\n    grid-area: 2 / 1 / 3 / 2;\n\n    display: flex;\n    flex-direction: column;\n    gap: 40px;\n}\n\n.sidebar h2 {\n    font-size: 1.6rem;\n    margin: 21px 0 16px;\n}\n\n.sidebar h2::after {\n    content: "";\n    display: block;\n    width: 100%;\n    height: 3px;\n    background-color: black;\n    margin-top: 10px;\n}\n\n.sidebar button.task-list {\n    background: none;\n    border: none;\n    cursor: pointer;\n    font-size: 1rem;\n    width: 100%;\n    padding: 17px 13px;\n\n    display: flex;\n    align-items: center;\n    gap: 14px;\n}\n\n.sidebar button.task-list:hover {\n    background-color: #CCCCCC;\n}\n\n.sidebar .nav-icon {\n    width: 21px;\n    height: auto;\n}\n\n.sidebar .button-title {\n    margin: 0;\n}\n\n/* ---------------------------- CONTENT ---------------------------- */\n\nsection {\n    grid-area: 2 / 2 / 3 / 3;\n}\n\n/* ---------------------------- FOOTER ---------------------------- */\n\nfooter {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: maroon;\n    color: white;\n    \n    grid-area: 3 / 1 / 4 / 3;\n}\n\nfooter a {\n    text-decoration: none;\n    \n    display: flex;\n    gap: 8px;\n    align-items: center;\n    justify-content: center;\n}\n\nfooter a p {\n    text-decoration: none;\n    color: white;\n}\n\nfooter img {\n    width: 30px;\n    height: auto;\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,2BAA2B;IAC3B,8BAA8B;AAClC;;AAEA;IACI,eAAe;IACf,aAAa;IACb,YAAY;IACZ,SAAS;;IAET,aAAa;IACb,sCAAsC;IACtC,iBAAiB;AACrB;;AAEA,qEAAqE;;AAErE;IACI,2BAA2B;IAC3B,kBAAkB;;IAElB,aAAa;IACb,8BAA8B;;IAE9B,wBAAwB;AAC5B;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,YAAY;AAChB;;AAEA;;AAEA;;AAEA,sEAAsE;;AAEtE;IACI,yBAAyB;IACzB,kBAAkB;;IAElB,wBAAwB;;IAExB,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,iBAAiB;IACjB,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,cAAc;IACd,WAAW;IACX,WAAW;IACX,uBAAuB;IACvB,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,YAAY;IACZ,eAAe;IACf,eAAe;IACf,WAAW;IACX,kBAAkB;;IAElB,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,SAAS;AACb;;AAEA,sEAAsE;;AAEtE;IACI,wBAAwB;AAC5B;;AAEA,qEAAqE;;AAErE;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,wBAAwB;IACxB,YAAY;;IAEZ,wBAAwB;AAC5B;;AAEA;IACI,qBAAqB;;IAErB,aAAa;IACb,QAAQ;IACR,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA;IACI,qBAAqB;IACrB,YAAY;AAChB;;AAEA;IACI,WAAW;IACX,YAAY;AAChB",sourcesContent:['* {\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n}\n\nbody {\n    font-size: 16px;\n    height: 100vh;\n    width: 100vw;\n    margin: 0;\n    \n    display: grid;\n    grid-template: auto 1fr auto / 1fr 4fr;\n    grid-auto-rows: 0;\n}\n\n/* ---------------------------- HEADER ---------------------------- */\n\nheader {\n    background-color: firebrick;\n    padding: 20px 30px;\n\n    display: flex;\n    justify-content: space-between;\n\n    grid-area: 1 / 1 / 2 / 3;\n}\n\nheader div:first-child {\n    display: flex;\n    align-items: center;\n    gap: 20px;\n}\n\nheader div:first-child img {\n    width: 24px;\n    height: auto;\n}\n\n.site-logo {\n    width: 200px;\n    height: auto;\n}\n\n.dark-mode-toggle {\n\n}\n\n/* ---------------------------- SIDEBAR ---------------------------- */\n\n.sidebar {\n    background-color: #DDDDDD;\n    padding: 20px 24px;\n\n    grid-area: 2 / 1 / 3 / 2;\n\n    display: flex;\n    flex-direction: column;\n    gap: 40px;\n}\n\n.sidebar h2 {\n    font-size: 1.6rem;\n    margin: 21px 0 16px;\n}\n\n.sidebar h2::after {\n    content: "";\n    display: block;\n    width: 100%;\n    height: 3px;\n    background-color: black;\n    margin-top: 10px;\n}\n\n.sidebar button.task-list {\n    background: none;\n    border: none;\n    cursor: pointer;\n    font-size: 1rem;\n    width: 100%;\n    padding: 17px 13px;\n\n    display: flex;\n    align-items: center;\n    gap: 14px;\n}\n\n.sidebar button.task-list:hover {\n    background-color: #CCCCCC;\n}\n\n.sidebar .nav-icon {\n    width: 21px;\n    height: auto;\n}\n\n.sidebar .button-title {\n    margin: 0;\n}\n\n/* ---------------------------- CONTENT ---------------------------- */\n\nsection {\n    grid-area: 2 / 2 / 3 / 3;\n}\n\n/* ---------------------------- FOOTER ---------------------------- */\n\nfooter {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: maroon;\n    color: white;\n    \n    grid-area: 3 / 1 / 4 / 3;\n}\n\nfooter a {\n    text-decoration: none;\n    \n    display: flex;\n    gap: 8px;\n    align-items: center;\n    justify-content: center;\n}\n\nfooter a p {\n    text-decoration: none;\n    color: white;\n}\n\nfooter img {\n    width: 30px;\n    height: auto;\n}'],sourceRoot:""}]);const s=i},312:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",o=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),o&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),o&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var d=0;d<n.length;d++){var A=[].concat(n[d]);o&&i[A[0]]||(void 0!==a&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=a),e&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=e):A[2]=e),r&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=r):A[4]="".concat(r)),t.push(A))}},t}},648:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[t].concat([a]).join("\n")}return[t].join("\n")}},596:n=>{var t=[];function e(n){for(var e=-1,o=0;o<t.length;o++)if(t[o].identifier===n){e=o;break}return e}function o(n,o){for(var a={},i=[],s=0;s<n.length;s++){var c=n[s],d=o.base?c[0]+o.base:c[0],A=a[d]||0,p="".concat(d," ").concat(A);a[d]=A+1;var l=e(p),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==l)t[l].references++,t[l].updater(u);else{var f=r(u,o);o.byIndex=s,t.splice(s,0,{identifier:p,updater:f,references:1})}i.push(p)}return i}function r(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var s=e(a[i]);t[s].references--}for(var c=o(n,r),d=0;d<a.length;d++){var A=e(a[d]);0===t[A].references&&(t[A].updater(),t.splice(A,1))}a=c}}},176:n=>{var t={};n.exports=function(n,e){var o=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}},808:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},120:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},520:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var o="";e.supports&&(o+="@supports (".concat(e.supports,") {")),e.media&&(o+="@media ".concat(e.media," {"));var r=void 0!==e.layer;r&&(o+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),o+=e.css,r&&(o+="}"),e.media&&(o+="}"),e.supports&&(o+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(o,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},936:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}}},t={};function e(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={id:o,exports:{}};return n[o](a,a.exports,e),a.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var o in t)e.o(t,o)&&!e.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:t[o]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),(()=>{var n;e.g.importScripts&&(n=e.g.location+"");var t=e.g.document;if(!n&&t&&(t.currentScript&&(n=t.currentScript.src),!n)){var o=t.getElementsByTagName("script");if(o.length)for(var r=o.length-1;r>-1&&!n;)n=o[r--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=n})(),e.nc=void 0,(()=>{const n={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let t;const o=new Uint8Array(16);function r(){if(!t&&(t="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!t))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return t(o)}const a=[];for(let n=0;n<256;++n)a.push((n+256).toString(16).slice(1));const i=function(t,e,o){if(n.randomUUID&&!e&&!t)return n.randomUUID();const i=(t=t||{}).random||(t.rng||r)();if(i[6]=15&i[6]|64,i[8]=63&i[8]|128,e){o=o||0;for(let n=0;n<16;++n)e[o+n]=i[n];return e}return function(n,t=0){return a[n[t+0]]+a[n[t+1]]+a[n[t+2]]+a[n[t+3]]+"-"+a[n[t+4]]+a[n[t+5]]+"-"+a[n[t+6]]+a[n[t+7]]+"-"+a[n[t+8]]+a[n[t+9]]+"-"+a[n[t+10]]+a[n[t+11]]+a[n[t+12]]+a[n[t+13]]+a[n[t+14]]+a[n[t+15]]}(i)},s={addItemToList(n){this.toDoItems.push(n)}},c={removeItemFromList(n){let t=this.toDoItems.findIndex((t=>t.id==n.id));-1!=t&&this.toDoItems.splice(t,1)}};class d{constructor(n,t,e){this.id=i(),this.title=n,this.colour=t,this.addToFavourites=e,this.toDoItems=[]}get title(){return this._title}set title(n){this._title=n}}Object.assign(d.prototype,s),Object.assign(d.prototype,c);class A extends d{constructor(n,t,e){super(n,t,e)}}Object.assign(A.prototype,s),Object.assign(A.prototype,c);const p={associateList(n){this.associatedLists.push(n)}};class l{constructor(n,t,e,o){this.id=i(),this.title=n,this.description=t,this.dueDate=new Date(e),this.priority=o,this.associatedLists=[]}}Object.assign(l.prototype,(function(n){})),Object.assign(l.prototype,p);const u=e.p+"d34d4ca6fe13822869cf.png",f=e.p+"8bd394fe4a75758835b7.png",h=e.p+"4c27d32139ea0789a49d.png",g=e.p+"d08f152b337f95957671.png",m=e.p+"a9004bf4b1008df3c369.png",b=e.p+"15861cfbc1f6bbf1008b.png",C=e.p+"dd56fb41e9c13dd32065.png",I=e.p+"2e069029dc4ce2839da1.png";function B(){return localStorage.getItem("allLists")?void 0:JSON.parse(localStorage.getItem("allLists"))}const x=e.p+"e3a9649561cdc6abb958.png";var y=e(596),v=e.n(y),E=e(520),w=e.n(E),k=e(176),S=e.n(k),D=e(120),j=e.n(D),T=e(808),L=e.n(T),Y=e(936),O=e.n(Y),z=e(904),R={};R.styleTagTransform=O(),R.setAttributes=j(),R.insert=S().bind(null,"head"),R.domAPI=w(),R.insertStyleElement=L(),v()(z.c,R),z.c&&z.c.locals&&z.c.locals,function(){const n=document.querySelector("body");n.appendChild(function(){const n=document.createElement("header"),t=new Image,e=new Image,o=new Image;t.src=u,e.src=f,o.src=h;const r=document.createElement("div");r.appendChild(t),r.appendChild(o);const a=new Image;a.src=g,a.classList.add("site-logo");const i=document.createElement("button");return i.classList.add("dark-mode-toggle"),n.appendChild(r),n.appendChild(a),n.appendChild(i),n}()),n.appendChild(function(){const n=document.createElement("nav");n.classList.add("sidebar");const t=document.createElement("div"),e=document.createElement("h2");e.textContent="Home",t.appendChild(e);const o=["All tasks","Today","This week"],r=[m,b,C];for(let n=0;n<o.length;n++){const e=document.createElement("button");e.classList.add("task-list");const a=new Image;a.src=r[n],a.classList.add("nav-icon");const i=document.createElement("p");i.textContent=`${o[n]}`,i.classList.add("button-title"),e.appendChild(a),e.appendChild(i),t.appendChild(e)}const a=document.createElement("div"),i=document.createElement("h2");return i.textContent="Your Lists",a.appendChild(i),B()&&B().map((n=>n.title)).forEach((n=>{const t=document.createElement("button");t.classList.add("task-list");const e=new Image;e.src=I,e.classList.add("nav-icon");const o=document.createElement("p");o.textContent=n,o.classList.add("button-title"),t.appendChild(e),t.appendChild(o),a.appendChild(t)})),n.appendChild(t),n.appendChild(a),n}()),n.appendChild(function(){const n=document.createElement("section");return n.classList.add("content"),n}()),n.appendChild(function(){const n=document.createElement("footer"),t=document.createElement("a");t.setAttribute("href","https://github.com/reezuan"),t.setAttribute("target","_blank"),t.setAttribute("rel","noopener noreferrer");const e=document.createElement("p");e.textContent="Made by reezuan",t.appendChild(e);const o=new Image;return o.src=x,o.setAttribute("alt","Github logo"),t.appendChild(o),n.appendChild(t),n}())}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,