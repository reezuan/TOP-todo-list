(()=>{"use strict";var e={840:(e,n,t)=>{t.d(n,{c:()=>d});var o=t(648),a=t.n(o),r=t(312),i=t.n(r)()(a());i.push([e.id,'* {\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n}\n\nbody {\n    font-size: 16px;\n    height: 100vh;\n    width: 100vw;\n    margin: 0;\n    \n    display: grid;\n    grid-template: auto 1fr auto / 1fr 4fr;\n    grid-auto-rows: 0;\n}\n\nbutton {\n    cursor: pointer;\n}\n\n.overlay {\n    position: fixed;\n    opacity: 0;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n    pointer-events: none;\n    transition: 200ms ease-in-out;\n}\n\n.overlay.active {\n    opacity: 1;\n    pointer-events: all;\n}\n\n/* ---------------------------- HEADER ---------------------------- */\n\nheader {\n    background-color: firebrick;\n    padding: 20px 30px;\n\n    display: flex;\n    justify-content: space-between;\n\n    grid-area: 1 / 1 / 2 / 3;\n}\n\nheader div:first-child {\n    display: flex;\n    align-items: center;\n    gap: 20px;\n}\n\nheader div:first-child img {\n    width: 24px;\n    height: auto;\n}\n\n.site-logo {\n    width: 200px;\n    height: auto;\n}\n\n.dark-mode-toggle {\n\n}\n\n/* ---------------------------- SIDEBAR ---------------------------- */\n\n.sidebar {\n    background-color: #DDDDDD;\n    padding: 20px 24px;\n\n    grid-area: 2 / 1 / 3 / 2;\n\n    display: flex;\n    flex-direction: column;\n    gap: 40px;\n}\n\n.sidebar button {\n    background: none;\n    border: none;\n    cursor: pointer;\n}\n\n.sidebar h2 {\n    font-size: 1.6rem;\n    margin: 0;\n}\n\n.sidebar .section-header {\n    display: block;\n    margin: 21px 0 16px;\n}\n\n.section-header-content {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.sidebar .section-header img {\n    width: 20px;\n    height: auto;\n}\n\n.sidebar .section-header::after {\n    content: "";\n    display: block;\n    width: 100%;\n    height: 3px;\n    background-color: black;\n    margin-top: 14px;\n}\n\n.sidebar button.project-list {\n    background: none;\n    border: none;\n    font-size: 1rem;\n    width: 100%;\n    padding: 17px 13px;\n\n    display: flex;\n    align-items: center;\n    gap: 14px;\n}\n\n.sidebar button.project-list:hover {\n    background-color: #CCCCCC;\n}\n\n.sidebar .nav-icon {\n    width: 21px;\n    height: auto;\n}\n\n.sidebar .button-title {\n    margin: 0;\n}\n\n.sidebar .action-buttons {\n    opacity: 0;\n}\n\n/* ---------------------------- CONTENT ---------------------------- */\n\nsection {\n    padding-top: 100px;\n    padding-left: max(25%, 100px);\n    padding-right: max(25%, 100px);\n    \n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 20px;\n    \n    grid-area: 2 / 2 / 3 / 3;\n}\n\nsection > div {\n    width: min(80%, 800px);\n\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.task-card {\n    border: none;\n    border-bottom: 1px solid #D3D3D3;\n    background: none;\n    width: 100%;\n    padding: 0 0 10px 0;\n    \n    display: grid;\n    grid-template: auto auto / auto 1fr;\n    column-gap: 15px;\n    row-gap: 15px;\n}\n\n.task-checkbox {\n    padding: 9px;\n    border-radius: 20px;\n    border: 1px solid #2c2c2c;\n    \n    grid-area: 1 / 1 / 3 / 2;\n}\n\n.task-title {\n    margin: 0;\n    justify-self: start;\n    \n    grid-area: 1 / 2 / 2 / 3;\n}\n\n.task-info-labels {\n    display: grid;\n    grid-template-columns: auto 1fr auto;\n    column-gap: 10px;\n    \n    grid-area: 2 / 2 / 3 / 3;\n}\n\n.task-info-labels button {\n    border: none;\n    background: none;\n}\n\n.task-due-date {\n    padding: 0;\n}\n\n.task-labels {\n    display: flex;\n    justify-content: start;\n    gap: 10px;\n}\n\n.task-labels button {\n    padding: 0;\n\n    display: flex;\n    align-items: center;\n    gap: 5px;\n}\n\n.task-labels button img {\n    width: 15px;\n    height: auto;\n}\n\n.task-labels button p {\n    color: #294C29;\n    font-size: 0.8rem;\n    margin: 0;\n}\n\nbutton.add-task {\n    background: none;\n    border: none;\n    align-self: flex-start;\n    width: 100%;\n    padding: 0;\n\n    display: flex;\n    align-items: center;\n    gap: 20px;\n}\n\nbutton.add-task img {\n    width: 13px;\n    height: auto;\n}\n\nbutton.add-task p {\n    margin: 0;\n}\n\n/* ----------------------------- MODAL ----------------------------- */\n\n.overlay {\n    position: fixed;\n    opacity: 0;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n    pointer-events: none;\n    transition: 200ms ease-in-out;\n}\n\n#overlay.active {\n    opacity: 1;\n    pointer-events: all;\n}\n\n.modal {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%) scale(0);\n    transition: 200ms ease-in-out;\n    border-radius: 10px;\n    z-index: 10;\n    background-color: whitesmoke;\n    width: 300px;\n    max-width: 80%;\n    padding: 20px 25px;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 20px;\n}\n\n.modal.active {\n    transform: translate(-50%, -50%) scale(1);\n}\n\n/* ---------------------------- FOOTER ---------------------------- */\n\nfooter {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: black;\n    color: white;\n    \n    grid-area: 3 / 1 / 4 / 3;\n}\n\nfooter a {\n    text-decoration: none;\n    \n    display: flex;\n    gap: 8px;\n    align-items: center;\n    justify-content: center;\n}\n\nfooter a p {\n    text-decoration: none;\n    color: white;\n}\n\nfooter img {\n    width: 30px;\n    height: auto;\n}',"",{version:3,sources:["webpack://./src/core/style.css"],names:[],mappings:"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",sourcesContent:['* {\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n}\n\nbody {\n    font-size: 16px;\n    height: 100vh;\n    width: 100vw;\n    margin: 0;\n    \n    display: grid;\n    grid-template: auto 1fr auto / 1fr 4fr;\n    grid-auto-rows: 0;\n}\n\nbutton {\n    cursor: pointer;\n}\n\n.overlay {\n    position: fixed;\n    opacity: 0;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n    pointer-events: none;\n    transition: 200ms ease-in-out;\n}\n\n.overlay.active {\n    opacity: 1;\n    pointer-events: all;\n}\n\n/* ---------------------------- HEADER ---------------------------- */\n\nheader {\n    background-color: firebrick;\n    padding: 20px 30px;\n\n    display: flex;\n    justify-content: space-between;\n\n    grid-area: 1 / 1 / 2 / 3;\n}\n\nheader div:first-child {\n    display: flex;\n    align-items: center;\n    gap: 20px;\n}\n\nheader div:first-child img {\n    width: 24px;\n    height: auto;\n}\n\n.site-logo {\n    width: 200px;\n    height: auto;\n}\n\n.dark-mode-toggle {\n\n}\n\n/* ---------------------------- SIDEBAR ---------------------------- */\n\n.sidebar {\n    background-color: #DDDDDD;\n    padding: 20px 24px;\n\n    grid-area: 2 / 1 / 3 / 2;\n\n    display: flex;\n    flex-direction: column;\n    gap: 40px;\n}\n\n.sidebar button {\n    background: none;\n    border: none;\n    cursor: pointer;\n}\n\n.sidebar h2 {\n    font-size: 1.6rem;\n    margin: 0;\n}\n\n.sidebar .section-header {\n    display: block;\n    margin: 21px 0 16px;\n}\n\n.section-header-content {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.sidebar .section-header img {\n    width: 20px;\n    height: auto;\n}\n\n.sidebar .section-header::after {\n    content: "";\n    display: block;\n    width: 100%;\n    height: 3px;\n    background-color: black;\n    margin-top: 14px;\n}\n\n.sidebar button.project-list {\n    background: none;\n    border: none;\n    font-size: 1rem;\n    width: 100%;\n    padding: 17px 13px;\n\n    display: flex;\n    align-items: center;\n    gap: 14px;\n}\n\n.sidebar button.project-list:hover {\n    background-color: #CCCCCC;\n}\n\n.sidebar .nav-icon {\n    width: 21px;\n    height: auto;\n}\n\n.sidebar .button-title {\n    margin: 0;\n}\n\n.sidebar .action-buttons {\n    opacity: 0;\n}\n\n/* ---------------------------- CONTENT ---------------------------- */\n\nsection {\n    padding-top: 100px;\n    padding-left: max(25%, 100px);\n    padding-right: max(25%, 100px);\n    \n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 20px;\n    \n    grid-area: 2 / 2 / 3 / 3;\n}\n\nsection > div {\n    width: min(80%, 800px);\n\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.task-card {\n    border: none;\n    border-bottom: 1px solid #D3D3D3;\n    background: none;\n    width: 100%;\n    padding: 0 0 10px 0;\n    \n    display: grid;\n    grid-template: auto auto / auto 1fr;\n    column-gap: 15px;\n    row-gap: 15px;\n}\n\n.task-checkbox {\n    padding: 9px;\n    border-radius: 20px;\n    border: 1px solid #2c2c2c;\n    \n    grid-area: 1 / 1 / 3 / 2;\n}\n\n.task-title {\n    margin: 0;\n    justify-self: start;\n    \n    grid-area: 1 / 2 / 2 / 3;\n}\n\n.task-info-labels {\n    display: grid;\n    grid-template-columns: auto 1fr auto;\n    column-gap: 10px;\n    \n    grid-area: 2 / 2 / 3 / 3;\n}\n\n.task-info-labels button {\n    border: none;\n    background: none;\n}\n\n.task-due-date {\n    padding: 0;\n}\n\n.task-labels {\n    display: flex;\n    justify-content: start;\n    gap: 10px;\n}\n\n.task-labels button {\n    padding: 0;\n\n    display: flex;\n    align-items: center;\n    gap: 5px;\n}\n\n.task-labels button img {\n    width: 15px;\n    height: auto;\n}\n\n.task-labels button p {\n    color: #294C29;\n    font-size: 0.8rem;\n    margin: 0;\n}\n\nbutton.add-task {\n    background: none;\n    border: none;\n    align-self: flex-start;\n    width: 100%;\n    padding: 0;\n\n    display: flex;\n    align-items: center;\n    gap: 20px;\n}\n\nbutton.add-task img {\n    width: 13px;\n    height: auto;\n}\n\nbutton.add-task p {\n    margin: 0;\n}\n\n/* ----------------------------- MODAL ----------------------------- */\n\n.overlay {\n    position: fixed;\n    opacity: 0;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n    pointer-events: none;\n    transition: 200ms ease-in-out;\n}\n\n#overlay.active {\n    opacity: 1;\n    pointer-events: all;\n}\n\n.modal {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%) scale(0);\n    transition: 200ms ease-in-out;\n    border-radius: 10px;\n    z-index: 10;\n    background-color: whitesmoke;\n    width: 300px;\n    max-width: 80%;\n    padding: 20px 25px;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 20px;\n}\n\n.modal.active {\n    transform: translate(-50%, -50%) scale(1);\n}\n\n/* ---------------------------- FOOTER ---------------------------- */\n\nfooter {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: black;\n    color: white;\n    \n    grid-area: 3 / 1 / 4 / 3;\n}\n\nfooter a {\n    text-decoration: none;\n    \n    display: flex;\n    gap: 8px;\n    align-items: center;\n    justify-content: center;\n}\n\nfooter a p {\n    text-decoration: none;\n    color: white;\n}\n\nfooter img {\n    width: 30px;\n    height: auto;\n}'],sourceRoot:""}]);const d=i},312:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,a,r){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(o)for(var d=0;d<this.length;d++){var s=this[d][0];null!=s&&(i[s]=!0)}for(var c=0;c<e.length;c++){var A=[].concat(e[c]);o&&i[A[0]]||(void 0!==r&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=r),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),a&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=a):A[4]="".concat(a)),n.push(A))}},n}},648:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(a," */");return[n].concat([r]).join("\n")}return[n].join("\n")}},596:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var r={},i=[],d=0;d<e.length;d++){var s=e[d],c=o.base?s[0]+o.base:s[0],A=r[c]||0,l="".concat(c," ").concat(A);r[c]=A+1;var p=t(l),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var m=a(u,o);o.byIndex=d,n.splice(d,0,{identifier:l,updater:m,references:1})}i.push(l)}return i}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var r=o(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<r.length;i++){var d=t(r[i]);n[d].references--}for(var s=o(e,a),c=0;c<r.length;c++){var A=t(r[c]);0===n[A].references&&(n[A].updater(),n.splice(A,1))}r=s}}},176:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},808:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},120:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},520:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},936:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var a=n[o];if(void 0!==a)return a.exports;var r=n[o]={id:o,exports:{}};return e[o](r,r.exports,t),r.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var o=n.getElementsByTagName("script");if(o.length)for(var a=o.length-1;a>-1&&!e;)e=o[a--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.nc=void 0,(()=>{const e={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let n;const o=new Uint8Array(16);function a(){if(!n&&(n="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!n))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return n(o)}const r=[];for(let e=0;e<256;++e)r.push((e+256).toString(16).slice(1));const i=function(n,t,o){if(e.randomUUID&&!t&&!n)return e.randomUUID();const i=(n=n||{}).random||(n.rng||a)();if(i[6]=15&i[6]|64,i[8]=63&i[8]|128,t){o=o||0;for(let e=0;e<16;++e)t[o+e]=i[e];return t}return function(e,n=0){return r[e[n+0]]+r[e[n+1]]+r[e[n+2]]+r[e[n+3]]+"-"+r[e[n+4]]+r[e[n+5]]+"-"+r[e[n+6]]+r[e[n+7]]+"-"+r[e[n+8]]+r[e[n+9]]+"-"+r[e[n+10]]+r[e[n+11]]+r[e[n+12]]+r[e[n+13]]+r[e[n+14]]+r[e[n+15]]}(i)};class d{constructor(){const e=i();Object.defineProperty(this,"id",{value:e,writable:!1,enumerable:!0,configurable:!1}),this.tasks=[]}}class s extends d{constructor(){super(),this.createdByUser=!1}}const c={addLabel(e){this.labels.push(e)}},A={setAssociatedProjectId(e){this.associatedProjectId=e.id}};class l{constructor(e,n,t){const o=i();Object.defineProperty(this,"id",{value:o,writable:!1,enumerable:!0,configurable:!1}),this.title=e,this.description=n,this.dueDate=new Date(t),this.labels=[],this.associatedProjectId=void 0,this.completed=!1}}function p(){if(localStorage.getItem("allTasks")){const e=JSON.parse(localStorage.getItem("allTasks"));return e.forEach((e=>{Object.setPrototypeOf(e,l.prototype),e.dueDate=new Date(e.dueDate)})),e}}Object.assign(l.prototype,c),Object.assign(l.prototype,A);class u extends s{constructor(){super(),this.title="All tasks",this.tasks=p()}}const m=t.p+"15861cfbc1f6bbf1008b.png",C=t.p+"dd56fb41e9c13dd32065.png",b=t.p+"d34d4ca6fe13822869cf.png",g=t.p+"b0cf3e4eaf5dee3ad60c.png",h=t.p+"e3a9649561cdc6abb958.png",f=t.p+"4c27d32139ea0789a49d.png",I=t.p+"a9004bf4b1008df3c369.png",B=t.p+"b395302003c62cd3c818.png",y=t.p+"8835a517234a229acd4a.png",x=t.p+"8bd394fe4a75758835b7.png",E=t.p+"d08f152b337f95957671.png",v=t.p+"2e069029dc4ce2839da1.png",k=t.p+"92881cf98b591daca7ae.png",w={addTask(e){this.tasks.push(e),function(e){const n=D();let t=n.findIndex((n=>n.id===e.id));-1!=t&&n.splice(t,1,e),localStorage.setItem("allProjects",JSON.stringify(n))}(this)}},S={removeTask(e){let n=this.tasks.findIndex((n=>n.id==e.id));-1!=n&&this.tasks.splice(n,1)}},j={rename(e){let n=D(),t=n.findIndex((e=>e.id===this.id));this.title=e,-1!=t&&n.splice(t,1,this),localStorage.setItem("allProjects",JSON.stringify(n))}};class L extends d{constructor(e){super(),this.title=e,this.createdByUser=!0}}function D(){if(localStorage.getItem("allProjects")){const e=JSON.parse(localStorage.getItem("allProjects"));return e.forEach((e=>{Object.setPrototypeOf(e,L.prototype),e.tasks.forEach((e=>{e.dueDate=new Date(e.dueDate)}))})),e}}function T(e){return D().find((n=>n.id===e))}function q(e){let n;n=localStorage.getItem("allTasks")?JSON.parse(localStorage.getItem("allTasks")):[],n.push(e),localStorage.setItem("allTasks",JSON.stringify(n))}function O(e){document.querySelector("section")&&document.querySelector("section").remove();const n=document.createElement("section"),t=document.createElement("h2");t.classList.add("project-title"),t.textContent=e.title;const o=document.createElement("div");0!==e.tasks.length&&e.tasks.forEach((e=>{o.appendChild(function(e){const n=document.createElement("button");n.classList.add("task-card"),n.setAttribute("id",e.id);const t=document.createElement("button");t.classList.add("task-checkbox"),n.appendChild(t);const o=document.createElement("h3");o.classList.add("task-title"),o.textContent=e.title,n.appendChild(o);const a=document.createElement("div");a.classList.add("task-info-labels"),n.appendChild(a);const r=document.createElement("button");var i;r.classList.add("task-due-date"),r.textContent=`${(i=e.dueDate).getDate().toString().padStart(2,"0")} ${i.toLocaleString("en-sg",{month:"short"})} '${i.getFullYear().toString().substr(-2)}`,a.appendChild(r);const d=document.createElement("div");d.classList.add("task-labels"),e.labels.forEach((e=>{const n=document.createElement("button"),t=new Image;t.src=B,n.appendChild(t);const o=document.createElement("p");o.textContent=e,n.appendChild(o),d.appendChild(n)})),a.appendChild(d);const s=document.createElement("button");return s.classList.add("task-project"),s.textContent=e.associatedProjectId?T(e.associatedProjectId).title:"All tasks",a.appendChild(s),n}(e))}));const a=document.createElement("button");a.classList.add("add-task");const r=new Image;r.src=y,a.appendChild(r);const i=document.createElement("p");return i.textContent="Add task",a.appendChild(i),a.addEventListener("click",(()=>{a.remove();const t=document.createElement("form");t.classList.add("add-task");const o=document.createElement("input");o.setAttribute("type","text"),o.setAttribute("placeholder","Task name"),o.setAttribute("id","task-name"),t.appendChild(o);const r=document.createElement("input");r.setAttribute("type","textarea"),r.setAttribute("placeholder","Description"),r.setAttribute("id","task-description"),t.appendChild(r);const i=document.createElement("input");i.setAttribute("type","datetime-local"),i.setAttribute("id","task-due-date"),t.appendChild(i);const d=document.createElement("div");t.appendChild(d);const s=document.createElement("button");s.textContent="Cancel",d.appendChild(s),s.addEventListener("click",(()=>{t.reset(),t.remove(),n.appendChild(a)}));const c=document.createElement("button");c.textContent="Add task",c.setAttribute("type","submit"),d.appendChild(c),t.addEventListener("submit",(n=>{n.preventDefault();const t=document.querySelector("body"),o=document.querySelector("#task-name").value,a=document.querySelector("#task-description").value,r=document.querySelector("#task-due-date").value,i=new l(o,a,r);if(!1===e.createdByUser){q(i);const n=e.constructor;t.appendChild(O(new n))}else i.setAssociatedProjectId(e),q(i),e.addTask(i),t.appendChild(O(e))})),n.appendChild(t)})),n.appendChild(t),n.appendChild(o),n.appendChild(a),n}Object.assign(d.prototype,w),Object.assign(d.prototype,S),Object.assign(d.prototype,j);class Y extends s{constructor(){super(),this.title="Today",this.tasks=p().filter((e=>{const n=new Date;n.setHours(0,0,0,0);const t=e.dueDate;return t.setHours(0,0,0,0),n.getTime()===t.getTime()}))}}class U extends s{constructor(){super(),this.title="This week",this.tasks=p().filter((e=>{const n=new Date,t=new Date(n);t.setDate(n.getDate()-(n.getDay()||7)+1),t.setHours(0,0,0,0);const o=new Date(n);o.setDate(n.getDate()-(n.getDay()||7)+7),o.setHours(23,59,59,999);const a=e.dueDate;return a>=t&&a<=o}))}}function P(e){const n=document.querySelector(".overlay");null!=e&&(e.classList.add("active"),n.classList.add("active"))}function W(e){const n=document.querySelector(".overlay.active");null!=e&&(e.classList.remove("active"),n.classList.remove("active"))}function N(e){null!=document.querySelector("#delete-project-modal")&&document.querySelector("#delete-project-modal").remove();const n=T(e),t=document.createElement("div");t.setAttribute("id","delete-project-modal"),t.classList.add("modal");const o=document.createElement("p");o.innerHTML=`Are you sure you want to delete <b>${n.title}</b>?`,t.appendChild(o);const a=document.createElement("button");a.textContent="Cancel",t.appendChild(a),a.addEventListener("click",(()=>{W(a.closest(".modal")),a.closest(".modal").remove()}));const r=document.createElement("button");return r.textContent="Delete",t.appendChild(r),r.addEventListener("click",(()=>{W(r.closest(".modal")),r.closest(".modal").remove(),function(e){T(e).tasks.forEach((e=>{!function(e){const n=p();let t=n.findIndex((n=>n.id===e));-1!=t&&n.splice(t,1),localStorage.setItem("allTasks",JSON.stringify(n))}(e.id)}))}(e),function(e){const n=D();let t=n.findIndex((n=>n.id===e));-1!=t&&n.splice(t,1),localStorage.setItem("allProjects",JSON.stringify(n))}(e);const n=document.querySelector("body");n.appendChild(R()),n.appendChild(O(new u))})),t}function z(){const e=document.createElement("div"),n=document.createElement("div");n.classList.add("section-header"),e.appendChild(n);const t=document.createElement("div");t.classList.add("section-header-content"),n.appendChild(t);const o=document.createElement("h2");return o.textContent="Your Projects",t.appendChild(o),t.appendChild(function(){const e=document.createElement("button");e.setAttribute("data-modal-target","#add-project-modal");const n=new Image;return n.src=y,e.appendChild(n),e.addEventListener("click",(()=>{document.querySelector("body").appendChild(function(){const e=document.createElement("div");e.setAttribute("id","add-project-modal"),e.classList.add("modal");const n=document.createElement("h2");n.textContent="Add a new project",e.appendChild(n);const t=document.createElement("form");e.appendChild(t);const o=document.createElement("label");o.setAttribute("for","project-title"),t.appendChild(o);const a=document.createElement("input");a.setAttribute("type","text"),a.setAttribute("id","project-title"),a.setAttribute("name","project-title"),t.appendChild(a);const r=document.createElement("button");r.textContent="Cancel",r.setAttribute("type","button"),t.appendChild(r),r.addEventListener("click",(()=>{W(t.closest(".modal")),t.reset(),t.closest(".modal").remove()}));const i=document.createElement("button");return i.textContent="Create project",i.setAttribute("type","submit"),t.appendChild(i),t.addEventListener("submit",(e=>{e.preventDefault();let n=document.querySelector("#project-title");const o=document.querySelector("body");var a;!function(e){let n;n=localStorage.getItem("allProjects")?JSON.parse(localStorage.getItem("allProjects")):[],n.push(e),localStorage.setItem("allProjects",JSON.stringify(n))}((a=n.value,new L(a))),W(t.closest(".modal")),t.reset(),o.appendChild(R())})),e}()),P(document.querySelector("#add-project-modal"))})),e}()),D()&&D().forEach((n=>{e.appendChild(function(e){const n=document.querySelector("body"),t=T(e),o=document.createElement("button");o.classList.add("project-list"),o.setAttribute("id",t.id),o.addEventListener("click",(()=>{n.appendChild(O(t))})),o.addEventListener("mouseenter",(e=>{e.target.querySelector(".action-buttons").style.opacity="1"})),o.addEventListener("mouseleave",(e=>{e.target.querySelector(".action-buttons").style.opacity="0"}));const a=new Image;a.src=v,a.classList.add("nav-icon");const r=document.createElement("p");r.textContent=t.title,r.classList.add("button-title");const i=document.createElement("button"),d=new Image;d.src=g,d.classList.add("nav-icon"),i.appendChild(d),i.addEventListener("click",(()=>{n.appendChild(function(e){null!=document.querySelector("#rename-project-modal")&&document.querySelector("#rename-project-modal").remove();const n=document.createElement("div");n.setAttribute("id","rename-project-modal"),n.classList.add("modal");const t=document.createElement("h2");t.textContent="Rename project",n.appendChild(t);const o=document.createElement("form");n.appendChild(o);const a=document.createElement("label");a.setAttribute("for","edited-title"),o.appendChild(a);const r=document.createElement("input");r.setAttribute("type","text"),r.setAttribute("id","edited-title"),r.setAttribute("name","edited-title"),o.appendChild(r);const i=document.createElement("button");i.textContent="Cancel",i.setAttribute("type","button"),o.appendChild(i),i.addEventListener("click",(()=>{W(o.closest(".modal")),o.reset()}));const d=document.createElement("button");return d.textContent="Save",d.setAttribute("type","submit"),o.appendChild(d),o.addEventListener("submit",(n=>{n.preventDefault();const t=document.querySelector("#edited-title"),a=document.querySelector("body");T(e.id).rename(t.value),W(o.closest(".modal")),o.reset(),a.appendChild(R())})),n}(t)),P(document.querySelector("#rename-project-modal"))}));const s=document.createElement("button"),c=new Image;c.src=k,c.classList.add("nav-icon"),s.appendChild(c),s.addEventListener("click",(()=>{n.appendChild(N(t.id)),P(document.querySelector("#delete-project-modal"))}));const A=document.createElement("div");return A.classList.add("action-buttons"),A.style.setProperty("margin-left","auto"),A.appendChild(i),A.appendChild(s),o.appendChild(a),o.appendChild(r),o.appendChild(A),o}(n.id))})),e}function R(){document.querySelector(".sidebar")&&document.querySelector(".sidebar").remove(),document.querySelector("body");const e=document.createElement("nav");return e.classList.add("sidebar"),e.appendChild(function(){const e=document.createElement("div"),n=document.createElement("div");n.classList.add("section-header"),e.appendChild(n);const t=document.createElement("div");t.classList.add("section-header-content"),n.appendChild(t);const o=document.createElement("h2");return o.textContent="Home",t.appendChild(o),e.appendChild(function(){const e=document.querySelector("body"),n=document.createElement("button");n.classList.add("project-list");const t=new Image;t.src=I,t.classList.add("nav-icon");const o=document.createElement("p");return o.textContent="All tasks",o.classList.add("button-title"),n.appendChild(t),n.appendChild(o),n.addEventListener("click",(()=>{const n=new u;e.appendChild(O(n))})),n}()),e.appendChild(function(){const e=document.querySelector("body"),n=document.createElement("button");n.classList.add("project-list");const t=new Image;t.src=m,t.classList.add("nav-icon");const o=document.createElement("p");return o.textContent="Today",o.classList.add("button-title"),n.appendChild(t),n.appendChild(o),n.addEventListener("click",(()=>{const n=new Y;e.appendChild(O(n))})),n}()),e.appendChild(function(){const e=document.querySelector("body"),n=document.createElement("button");n.classList.add("project-list");const t=new Image;t.src=C,t.classList.add("nav-icon");const o=document.createElement("p");return o.textContent="This week",o.classList.add("button-title"),n.appendChild(t),n.appendChild(o),n.addEventListener("click",(()=>{const n=new U;e.appendChild(O(n))})),n}()),e}()),e.appendChild(z()),e}var M=t(596),J=t.n(M),X=t(520),Z=t.n(X),H=t(176),Q=t.n(H),V=t(120),$=t.n(V),F=t(808),_=t.n(F),G=t(936),K=t.n(G),ee=t(840),ne={};ne.styleTagTransform=K(),ne.setAttributes=$(),ne.insert=Q().bind(null,"head"),ne.domAPI=Z(),ne.insertStyleElement=_(),J()(ee.c,ne),ee.c&&ee.c.locals&&ee.c.locals,function(){const e=document.querySelector("body");localStorage.getItem("allTasks")||localStorage.setItem("allTasks",JSON.stringify([])),localStorage.getItem("allProjects")||localStorage.setItem("allProjects",JSON.stringify([])),e.appendChild(function(){const e=document.createElement("header"),n=new Image,t=new Image,o=new Image;n.src=b,t.src=x,o.src=f;const a=document.createElement("div");a.appendChild(n),a.appendChild(o);const r=new Image;r.src=E,r.classList.add("site-logo");const i=document.createElement("button");return i.classList.add("dark-mode-toggle"),e.appendChild(a),e.appendChild(r),e.appendChild(i),e}()),e.appendChild(R()),e.appendChild(O(new u)),e.appendChild(function(){const e=document.createElement("footer"),n=document.createElement("a");n.setAttribute("href","https://github.com/reezuan"),n.setAttribute("target","_blank"),n.setAttribute("rel","noopener noreferrer");const t=document.createElement("p");t.textContent="Made by reezuan",n.appendChild(t);const o=new Image;return o.src=h,o.setAttribute("alt","Github logo"),n.appendChild(o),e.appendChild(n),e}()),e.appendChild(function(){const e=document.createElement("div");return e.classList.add("overlay"),e.addEventListener("click",(()=>{document.querySelectorAll(".modal.active").forEach((e=>{W(e)}))})),e}())}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,