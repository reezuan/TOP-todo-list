(()=>{"use strict";var n={840:(n,e,t)=>{t.d(e,{c:()=>d});var a=t(648),o=t.n(a),r=t(312),i=t.n(r)()(o());i.push([n.id,'* {\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n}\n\nbody {\n    font-size: 16px;\n    height: 100vh;\n    width: 100vw;\n    margin: 0;\n    \n    display: grid;\n    grid-template: auto 1fr auto / 1fr 4fr;\n    grid-auto-rows: 0;\n}\n\nbutton {\n    cursor: pointer;\n}\n\n.overlay {\n    position: fixed;\n    opacity: 0;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n    pointer-events: none;\n    transition: 200ms ease-in-out;\n}\n\n.overlay.active {\n    opacity: 1;\n    pointer-events: all;\n}\n\n/* ---------------------------- HEADER ---------------------------- */\n\nheader {\n    background-color: firebrick;\n    padding: 20px 30px;\n\n    display: flex;\n    justify-content: space-between;\n\n    grid-area: 1 / 1 / 2 / 3;\n}\n\nheader div:first-child {\n    display: flex;\n    align-items: center;\n    gap: 20px;\n}\n\nheader div:first-child img {\n    width: 24px;\n    height: auto;\n}\n\n.site-logo {\n    width: 200px;\n    height: auto;\n}\n\n.dark-mode-toggle {\n\n}\n\n/* ---------------------------- SIDEBAR ---------------------------- */\n\n.sidebar {\n    background-color: #DDDDDD;\n    padding: 20px 24px;\n\n    grid-area: 2 / 1 / 3 / 2;\n\n    display: flex;\n    flex-direction: column;\n    gap: 40px;\n}\n\n.sidebar button {\n    background: none;\n    border: none;\n    cursor: pointer;\n}\n\n.sidebar h2 {\n    font-size: 1.6rem;\n    margin: 0;\n}\n\n.sidebar .section-header {\n    display: block;\n    margin: 21px 0 16px;\n}\n\n.section-header-content {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.sidebar .section-header img {\n    width: 20px;\n    height: auto;\n}\n\n.sidebar .section-header::after {\n    content: "";\n    display: block;\n    width: 100%;\n    height: 3px;\n    background-color: black;\n    margin-top: 14px;\n}\n\n.sidebar button.project-list {\n    background: none;\n    border: none;\n    font-size: 1rem;\n    width: 100%;\n    padding: 17px 13px;\n\n    display: flex;\n    align-items: center;\n    gap: 14px;\n}\n\n.sidebar button.project-list:hover {\n    background-color: #CCCCCC;\n}\n\n.sidebar .nav-icon {\n    width: 21px;\n    height: auto;\n}\n\n.sidebar .button-title {\n    margin: 0;\n}\n\n/* ---------------------------- CONTENT ---------------------------- */\n\nsection {\n    padding-top: 100px;\n    padding-left: max(30%, 100px);\n    padding-right: max(30%, 100px);\n    \n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 20px;\n    \n    grid-area: 2 / 2 / 3 / 3;\n}\n\nsection > div {\n    width: min(80%, 800px);\n\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.task-card {\n    border: none;\n    border-bottom: 1px solid #D3D3D3;\n    background: none;\n    width: 100%;\n    padding: 0 0 10px 0;\n    \n    display: grid;\n    grid-template: auto auto / auto 1fr;\n    column-gap: 15px;\n    row-gap: 15px;\n}\n\n.task-checkbox {\n    padding: 9px;\n    border-radius: 20px;\n    border: 1px solid #2c2c2c;\n    \n    grid-area: 1 / 1 / 3 / 2;\n}\n\n.task-title {\n    margin: 0;\n    justify-self: start;\n    \n    grid-area: 1 / 2 / 2 / 3;\n}\n\n.task-info-labels {\n    display: grid;\n    grid-template-columns: auto 1fr auto;\n    column-gap: 10px;\n    \n    grid-area: 2 / 2 / 3 / 3;\n}\n\n.task-info-labels button {\n    border: none;\n    background: none;\n}\n\n.task-due-date {\n    padding: 0;\n}\n\n.task-labels {\n    display: flex;\n    justify-content: start;\n    gap: 10px;\n}\n\n.task-labels button {\n    padding: 0;\n\n    display: flex;\n    align-items: center;\n    gap: 5px;\n}\n\n.task-labels button img {\n    width: 15px;\n    height: auto;\n}\n\n.task-labels button p {\n    color: #294C29;\n    font-size: 0.8rem;\n    margin: 0;\n}\n\nbutton.add-task {\n    background: none;\n    border: none;\n    align-self: flex-start;\n    width: 100%;\n    padding: 0;\n\n    display: flex;\n    align-items: center;\n    gap: 20px;\n}\n\nbutton.add-task img {\n    width: 13px;\n    height: auto;\n}\n\nbutton.add-task p {\n    margin: 0;\n}\n\n/* ----------------------------- MODAL ----------------------------- */\n\n.overlay {\n    position: fixed;\n    opacity: 0;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n    pointer-events: none;\n    transition: 200ms ease-in-out;\n}\n\n#overlay.active {\n    opacity: 1;\n    pointer-events: all;\n}\n\n.modal {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%) scale(0);\n    transition: 200ms ease-in-out;\n    border-radius: 10px;\n    z-index: 10;\n    background-color: whitesmoke;\n    width: 300px;\n    max-width: 80%;\n    padding: 20px 25px;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 20px;\n}\n\n.modal.active {\n    transform: translate(-50%, -50%) scale(1);\n}\n\n/* ---------------------------- FOOTER ---------------------------- */\n\nfooter {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: black;\n    color: white;\n    \n    grid-area: 3 / 1 / 4 / 3;\n}\n\nfooter a {\n    text-decoration: none;\n    \n    display: flex;\n    gap: 8px;\n    align-items: center;\n    justify-content: center;\n}\n\nfooter a p {\n    text-decoration: none;\n    color: white;\n}\n\nfooter img {\n    width: 30px;\n    height: auto;\n}',"",{version:3,sources:["webpack://./src/core/style.css"],names:[],mappings:"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",sourcesContent:['* {\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n}\n\nbody {\n    font-size: 16px;\n    height: 100vh;\n    width: 100vw;\n    margin: 0;\n    \n    display: grid;\n    grid-template: auto 1fr auto / 1fr 4fr;\n    grid-auto-rows: 0;\n}\n\nbutton {\n    cursor: pointer;\n}\n\n.overlay {\n    position: fixed;\n    opacity: 0;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n    pointer-events: none;\n    transition: 200ms ease-in-out;\n}\n\n.overlay.active {\n    opacity: 1;\n    pointer-events: all;\n}\n\n/* ---------------------------- HEADER ---------------------------- */\n\nheader {\n    background-color: firebrick;\n    padding: 20px 30px;\n\n    display: flex;\n    justify-content: space-between;\n\n    grid-area: 1 / 1 / 2 / 3;\n}\n\nheader div:first-child {\n    display: flex;\n    align-items: center;\n    gap: 20px;\n}\n\nheader div:first-child img {\n    width: 24px;\n    height: auto;\n}\n\n.site-logo {\n    width: 200px;\n    height: auto;\n}\n\n.dark-mode-toggle {\n\n}\n\n/* ---------------------------- SIDEBAR ---------------------------- */\n\n.sidebar {\n    background-color: #DDDDDD;\n    padding: 20px 24px;\n\n    grid-area: 2 / 1 / 3 / 2;\n\n    display: flex;\n    flex-direction: column;\n    gap: 40px;\n}\n\n.sidebar button {\n    background: none;\n    border: none;\n    cursor: pointer;\n}\n\n.sidebar h2 {\n    font-size: 1.6rem;\n    margin: 0;\n}\n\n.sidebar .section-header {\n    display: block;\n    margin: 21px 0 16px;\n}\n\n.section-header-content {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.sidebar .section-header img {\n    width: 20px;\n    height: auto;\n}\n\n.sidebar .section-header::after {\n    content: "";\n    display: block;\n    width: 100%;\n    height: 3px;\n    background-color: black;\n    margin-top: 14px;\n}\n\n.sidebar button.project-list {\n    background: none;\n    border: none;\n    font-size: 1rem;\n    width: 100%;\n    padding: 17px 13px;\n\n    display: flex;\n    align-items: center;\n    gap: 14px;\n}\n\n.sidebar button.project-list:hover {\n    background-color: #CCCCCC;\n}\n\n.sidebar .nav-icon {\n    width: 21px;\n    height: auto;\n}\n\n.sidebar .button-title {\n    margin: 0;\n}\n\n/* ---------------------------- CONTENT ---------------------------- */\n\nsection {\n    padding-top: 100px;\n    padding-left: max(30%, 100px);\n    padding-right: max(30%, 100px);\n    \n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 20px;\n    \n    grid-area: 2 / 2 / 3 / 3;\n}\n\nsection > div {\n    width: min(80%, 800px);\n\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.task-card {\n    border: none;\n    border-bottom: 1px solid #D3D3D3;\n    background: none;\n    width: 100%;\n    padding: 0 0 10px 0;\n    \n    display: grid;\n    grid-template: auto auto / auto 1fr;\n    column-gap: 15px;\n    row-gap: 15px;\n}\n\n.task-checkbox {\n    padding: 9px;\n    border-radius: 20px;\n    border: 1px solid #2c2c2c;\n    \n    grid-area: 1 / 1 / 3 / 2;\n}\n\n.task-title {\n    margin: 0;\n    justify-self: start;\n    \n    grid-area: 1 / 2 / 2 / 3;\n}\n\n.task-info-labels {\n    display: grid;\n    grid-template-columns: auto 1fr auto;\n    column-gap: 10px;\n    \n    grid-area: 2 / 2 / 3 / 3;\n}\n\n.task-info-labels button {\n    border: none;\n    background: none;\n}\n\n.task-due-date {\n    padding: 0;\n}\n\n.task-labels {\n    display: flex;\n    justify-content: start;\n    gap: 10px;\n}\n\n.task-labels button {\n    padding: 0;\n\n    display: flex;\n    align-items: center;\n    gap: 5px;\n}\n\n.task-labels button img {\n    width: 15px;\n    height: auto;\n}\n\n.task-labels button p {\n    color: #294C29;\n    font-size: 0.8rem;\n    margin: 0;\n}\n\nbutton.add-task {\n    background: none;\n    border: none;\n    align-self: flex-start;\n    width: 100%;\n    padding: 0;\n\n    display: flex;\n    align-items: center;\n    gap: 20px;\n}\n\nbutton.add-task img {\n    width: 13px;\n    height: auto;\n}\n\nbutton.add-task p {\n    margin: 0;\n}\n\n/* ----------------------------- MODAL ----------------------------- */\n\n.overlay {\n    position: fixed;\n    opacity: 0;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n    pointer-events: none;\n    transition: 200ms ease-in-out;\n}\n\n#overlay.active {\n    opacity: 1;\n    pointer-events: all;\n}\n\n.modal {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%) scale(0);\n    transition: 200ms ease-in-out;\n    border-radius: 10px;\n    z-index: 10;\n    background-color: whitesmoke;\n    width: 300px;\n    max-width: 80%;\n    padding: 20px 25px;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 20px;\n}\n\n.modal.active {\n    transform: translate(-50%, -50%) scale(1);\n}\n\n/* ---------------------------- FOOTER ---------------------------- */\n\nfooter {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: black;\n    color: white;\n    \n    grid-area: 3 / 1 / 4 / 3;\n}\n\nfooter a {\n    text-decoration: none;\n    \n    display: flex;\n    gap: 8px;\n    align-items: center;\n    justify-content: center;\n}\n\nfooter a p {\n    text-decoration: none;\n    color: white;\n}\n\nfooter img {\n    width: 30px;\n    height: auto;\n}'],sourceRoot:""}]);const d=i},312:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",a=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),a&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),a&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,a,o,r){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(a)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(i[c]=!0)}for(var s=0;s<n.length;s++){var A=[].concat(n[s]);a&&i[A[0]]||(void 0!==r&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=r),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),o&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=o):A[4]="".concat(o)),e.push(A))}},e}},648:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),r="/*# ".concat(o," */");return[e].concat([r]).join("\n")}return[e].join("\n")}},596:n=>{var e=[];function t(n){for(var t=-1,a=0;a<e.length;a++)if(e[a].identifier===n){t=a;break}return t}function a(n,a){for(var r={},i=[],d=0;d<n.length;d++){var c=n[d],s=a.base?c[0]+a.base:c[0],A=r[s]||0,l="".concat(s," ").concat(A);r[s]=A+1;var p=t(l),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=o(u,a);a.byIndex=d,e.splice(d,0,{identifier:l,updater:m,references:1})}i.push(l)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var r=a(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<r.length;i++){var d=t(r[i]);e[d].references--}for(var c=a(n,o),s=0;s<r.length;s++){var A=t(r[s]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}r=c}}},176:n=>{var e={};n.exports=function(n,t){var a=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},808:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},120:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},520:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,o&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(a,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},936:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(a){var o=e[a];if(void 0!==o)return o.exports;var r=e[a]={id:a,exports:{}};return n[a](r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var a in e)t.o(e,a)&&!t.o(n,a)&&Object.defineProperty(n,a,{enumerable:!0,get:e[a]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var a=e.getElementsByTagName("script");if(a.length)for(var o=a.length-1;o>-1&&!n;)n=a[o--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{const n=t.p+"15861cfbc1f6bbf1008b.png",e=t.p+"dd56fb41e9c13dd32065.png",a=t.p+"d34d4ca6fe13822869cf.png",o=t.p+"b0cf3e4eaf5dee3ad60c.png",r=t.p+"e3a9649561cdc6abb958.png",i=t.p+"4c27d32139ea0789a49d.png",d=t.p+"a9004bf4b1008df3c369.png",c=t.p+"b395302003c62cd3c818.png",s=t.p+"8835a517234a229acd4a.png",A=t.p+"8bd394fe4a75758835b7.png",l=t.p+"d08f152b337f95957671.png",p=t.p+"2e069029dc4ce2839da1.png",u=t.p+"92881cf98b591daca7ae.png";function m(n){const e=document.querySelector(".overlay.active");null!=n&&(n.classList.remove("active"),e.classList.remove("active"))}const C={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let g;const b=new Uint8Array(16);function h(){if(!g&&(g="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!g))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return g(b)}const f=[];for(let n=0;n<256;++n)f.push((n+256).toString(16).slice(1));const I=function(n,e,t){if(C.randomUUID&&!e&&!n)return C.randomUUID();const a=(n=n||{}).random||(n.rng||h)();if(a[6]=15&a[6]|64,a[8]=63&a[8]|128,e){t=t||0;for(let n=0;n<16;++n)e[t+n]=a[n];return e}return function(n,e=0){return f[n[e+0]]+f[n[e+1]]+f[n[e+2]]+f[n[e+3]]+"-"+f[n[e+4]]+f[n[e+5]]+"-"+f[n[e+6]]+f[n[e+7]]+"-"+f[n[e+8]]+f[n[e+9]]+"-"+f[n[e+10]]+f[n[e+11]]+f[n[e+12]]+f[n[e+13]]+f[n[e+14]]+f[n[e+15]]}(a)},B={addTask(n){this.tasks.push(n),function(n){const e=k();let t=e.findIndex((e=>e.id===n.id));-1!=t&&e.splice(t,1,n),localStorage.setItem("allProjects",JSON.stringify(e))}(this)}},x={removeTask(n){let e=this.tasks.findIndex((e=>e.id==n.id));-1!=e&&this.tasks.splice(e,1)}},y={rename(n){let e=k(),t=e.findIndex((n=>n.id===this.id));this.title=n,-1!=t&&e.splice(t,1,this),localStorage.setItem("allProjects",JSON.stringify(e))}},E={delete(){let n=k(),e=n.findIndex((n=>n.id===this.id));-1!=e&&n.splice(e,1),localStorage.setItem("allProjects",JSON.stringify(n))}};class v{constructor(n){const e=I();Object.defineProperty(this,"id",{value:e,writable:!1,enumerable:!0,configurable:!1}),this.title=n,this.tasks=[]}}function k(){if(localStorage.getItem("allProjects")){const n=JSON.parse(localStorage.getItem("allProjects"));return console.log(n),n.forEach((n=>{Object.setPrototypeOf(n,v.prototype),n.tasks.forEach((n=>{n.dueDate=new Date(n.dueDate)}))})),n}}function S(n){null!=document.querySelector("#rename-project-modal")&&document.querySelector("#rename-project-modal").remove();const e=document.createElement("div");e.setAttribute("id","rename-project-modal"),e.classList.add("modal");const t=document.createElement("h2");t.textContent="Rename project",e.appendChild(t);const a=document.createElement("form");e.appendChild(a);const o=document.createElement("label");o.setAttribute("for","edited-title"),a.appendChild(o);const r=document.createElement("input");r.setAttribute("type","text"),r.setAttribute("id","edited-title"),r.setAttribute("name","edited-title"),a.appendChild(r);const i=document.createElement("button");i.textContent="Cancel",i.setAttribute("type","button"),a.appendChild(i),i.addEventListener("click",(()=>{m(a.closest(".modal")),a.reset()}));const d=document.createElement("button");return d.textContent="Save",d.setAttribute("type","submit"),a.appendChild(d),a.addEventListener("submit",(e=>{e.preventDefault();const t=document.querySelector("#edited-title"),o=document.querySelector("body"),r=(i=n.id,k().find((n=>n.id==i)));var i;r.rename(t.value),m(a.closest(".modal")),a.reset(),o.appendChild(T())})),e}function w(n){null!=document.querySelector("#delete-project-modal")&&document.querySelector("#delete-project-modal").remove();const e=document.createElement("div");e.setAttribute("id","delete-project-modal"),e.classList.add("modal");const t=document.createElement("p");t.innerHTML=`Are you sure you want to delete <b>${n.title}</b>?`,e.appendChild(t);const a=document.createElement("button");a.textContent="Cancel",e.appendChild(a),a.addEventListener("click",(()=>{m(a.closest(".modal"))}));const o=document.createElement("button");return o.textContent="Delete",e.appendChild(o),o.addEventListener("click",(()=>{const e=document.querySelector("body");m(o.closest(".modal")),n.delete(),e.appendChild(T())})),e}Object.assign(v.prototype,B),Object.assign(v.prototype,x),Object.assign(v.prototype,y),Object.assign(v.prototype,E);const j={addLabel(n){this.labels.push(n)}};class L{constructor(n,e,t){const a=I();Object.defineProperty(this,"id",{value:a,writable:!1,enumerable:!0,configurable:!1}),this.title=n,this.description=e,this.dueDate=new Date(t),this.labels=[],this.associatedProject,this.completed=!1}}function D(n){let e,t;document.querySelector("section")&&document.querySelector("section").remove(),console.log(n),0===arguments.length?(e="All tasks",t=function(){if(localStorage.getItem("allTasks")){const n=JSON.parse(localStorage.getItem("allTasks"));return n.forEach((n=>{Object.setPrototypeOf(n,L.prototype),n.dueDate=new Date(n.dueDate)})),n}}()):(e=n.title,t=n.tasks,console.log(n.tasks));const a=document.createElement("section"),o=document.createElement("h2");o.classList.add("project-title"),o.textContent=e;const r=document.createElement("div");0!==t.length&&t.forEach((n=>{const t=document.createElement("button");t.classList.add("task-card");const a=document.createElement("button");a.classList.add("task-checkbox"),t.appendChild(a);const o=document.createElement("h3");o.classList.add("task-title"),o.textContent=`${n.title}`,t.appendChild(o);const i=document.createElement("div");i.classList.add("task-info-labels"),t.appendChild(i);const d=document.createElement("button");var s;d.classList.add("task-due-date"),d.textContent=`${(s=n.dueDate).getDate().toString().padStart(2,"0")} ${s.toLocaleString("en-sg",{month:"short"})} '${s.getFullYear().toString().substr(-2)}`,i.appendChild(d);const A=document.createElement("div");A.classList.add("task-labels"),n.labels.forEach((n=>{const e=document.createElement("button"),t=new Image;t.src=c,e.appendChild(t);const a=document.createElement("p");a.textContent=n,e.appendChild(a),A.appendChild(e)})),i.appendChild(A);const l=document.createElement("button");l.classList.add("task-project"),l.textContent=e,i.appendChild(l),r.appendChild(t)}));const i=document.createElement("button");i.classList.add("add-task");const d=new Image;d.src=s,i.appendChild(d);const A=document.createElement("p");return A.textContent="Add task",i.appendChild(A),i.addEventListener("click",(()=>{i.remove();const e=document.createElement("form");e.classList.add("add-task");const t=document.createElement("input");t.setAttribute("type","text"),t.setAttribute("placeholder","Task name"),t.setAttribute("id","task-name"),e.appendChild(t);const o=document.createElement("input");o.setAttribute("type","textarea"),o.setAttribute("placeholder","Description"),o.setAttribute("id","task-description"),e.appendChild(o);const r=document.createElement("input");r.setAttribute("type","datetime-local"),r.setAttribute("id","task-due-date"),e.appendChild(r);const d=document.createElement("div");e.appendChild(d);const c=document.createElement("button");c.textContent="Cancel",d.appendChild(c),c.addEventListener("click",(()=>{e.reset(),e.remove(),a.appendChild(i)}));const s=document.createElement("button");s.textContent="Add task",s.setAttribute("type","submit"),d.appendChild(s),e.addEventListener("submit",(e=>{e.preventDefault();const t=document.querySelector("body"),a=document.querySelector("#task-name").value,o=document.querySelector("#task-description").value,r=document.querySelector("#task-due-date").value;console.log(n),n.addTask(function(n,e,t){const a=new L(n,e,t);return function(n){let e;e=localStorage.getItem("allTasks")?JSON.parse(localStorage.getItem("allTasks")):[],e.push(n),localStorage.setItem("allTasks",JSON.stringify(e))}(a),a}(a,o,r)),t.appendChild(D(n))})),a.appendChild(e)})),a.appendChild(o),a.appendChild(r),a.appendChild(i),a}function O(n){const e=document.querySelector(".overlay");null!=n&&(n.classList.add("active"),e.classList.add("active"))}function T(){document.querySelector(".sidebar")&&document.querySelector(".sidebar").remove();const t=document.querySelector("body"),a=document.createElement("nav");a.classList.add("sidebar");const r=document.createElement("div"),i=document.createElement("div");i.classList.add("section-header"),r.appendChild(i);const c=document.createElement("div");c.classList.add("section-header-content"),i.appendChild(c);const A=document.createElement("h2");A.textContent="Home",c.appendChild(A),i.appendChild(c),r.appendChild(i);const l=["All tasks","Today","This week"],m=[d,n,e];for(let n=0;n<l.length;n++){const e=document.createElement("button");e.classList.add("project-list");const t=new Image;t.src=m[n],t.classList.add("nav-icon");const a=document.createElement("p");a.textContent=`${l[n]}`,a.classList.add("button-title"),e.appendChild(t),e.appendChild(a),r.appendChild(e)}const C=document.createElement("div"),g=document.createElement("div");g.classList.add("section-header");const b=document.createElement("div");b.classList.add("section-header-content"),g.appendChild(b);const h=document.createElement("h2");h.textContent="Your Projects",b.appendChild(h);const f=document.createElement("button");f.setAttribute("data-modal-target","#add-project-modal");const I=new Image;return I.src=s,f.addEventListener("click",(()=>{O(document.querySelector("#add-project-modal"))})),f.appendChild(I),b.appendChild(f),C.appendChild(g),k()&&k().forEach((n=>{const e=document.createElement("button");e.classList.add("project-list");const a=new Image;a.src=p,a.classList.add("nav-icon");const r=document.createElement("p");r.textContent=n.title,r.classList.add("button-title"),e.addEventListener("click",(()=>{t.appendChild(D(n))}));const i=document.createElement("div");i.classList.add("action-buttons"),i.style.setProperty("margin-left","auto");const d=document.createElement("button"),c=new Image;c.src=o,c.classList.add("nav-icon"),d.appendChild(c),d.addEventListener("click",(()=>{t.appendChild(S(n)),O(document.querySelector("#rename-project-modal"))})),i.appendChild(d);const s=document.createElement("button"),A=new Image;A.src=u,A.classList.add("nav-icon"),s.appendChild(A),s.addEventListener("click",(()=>{t.appendChild(w(n)),O(document.querySelector("#delete-project-modal"))})),i.appendChild(s),C.appendChild(e),e.appendChild(a),e.appendChild(r),e.appendChild(i)})),a.appendChild(r),a.appendChild(C),a}Object.assign(L.prototype,j);var Y=t(596),q=t.n(Y),U=t(520),W=t.n(U),P=t(176),z=t.n(P),N=t(120),R=t.n(N),M=t(808),J=t.n(M),X=t(936),Z=t.n(X),Q=t(840),V={};V.styleTagTransform=Z(),V.setAttributes=R(),V.insert=z().bind(null,"head"),V.domAPI=W(),V.insertStyleElement=J(),q()(Q.c,V),Q.c&&Q.c.locals&&Q.c.locals,function(){const n=document.querySelector("body");localStorage.getItem("allTasks")||localStorage.setItem("allTasks",JSON.stringify([])),localStorage.getItem("allProjects")||localStorage.setItem("allProjects",JSON.stringify([])),n.appendChild(function(){const n=document.createElement("header"),e=new Image,t=new Image,o=new Image;e.src=a,t.src=A,o.src=i;const r=document.createElement("div");r.appendChild(e),r.appendChild(o);const d=new Image;d.src=l,d.classList.add("site-logo");const c=document.createElement("button");return c.classList.add("dark-mode-toggle"),n.appendChild(r),n.appendChild(d),n.appendChild(c),n}()),n.appendChild(T()),n.appendChild(D()),n.appendChild(function(){const n=document.createElement("footer"),e=document.createElement("a");e.setAttribute("href","https://github.com/reezuan"),e.setAttribute("target","_blank"),e.setAttribute("rel","noopener noreferrer");const t=document.createElement("p");t.textContent="Made by reezuan",e.appendChild(t);const a=new Image;return a.src=r,a.setAttribute("alt","Github logo"),e.appendChild(a),n.appendChild(e),n}()),n.appendChild(function(){const n=document.createElement("div");return n.classList.add("overlay"),n.addEventListener("click",(()=>{document.querySelectorAll(".modal.active").forEach((n=>{m(n)}))})),n}()),n.appendChild(function(){const n=document.createElement("div");n.setAttribute("id","add-project-modal"),n.classList.add("modal");const e=document.createElement("h2");e.textContent="Add a new project",n.appendChild(e);const t=document.createElement("form");n.appendChild(t);const a=document.createElement("label");a.setAttribute("for","project-title"),t.appendChild(a);const o=document.createElement("input");o.setAttribute("type","text"),o.setAttribute("id","project-title"),o.setAttribute("name","project-title"),t.appendChild(o);const r=document.createElement("button");r.textContent="Cancel",r.setAttribute("type","button"),t.appendChild(r),r.addEventListener("click",(()=>{m(t.closest(".modal")),t.reset()}));const i=document.createElement("button");return i.textContent="Create project",i.setAttribute("type","submit"),t.appendChild(i),t.addEventListener("submit",(n=>{n.preventDefault();let e=document.querySelector("#project-title");const a=document.querySelector("body");(function(n){const e=new v(n);(function(n){let e;e=localStorage.getItem("allProjects")?JSON.parse(localStorage.getItem("allProjects")):[],e.push(n),localStorage.setItem("allProjects",JSON.stringify(e))})(e)})(e.value),m(t.closest(".modal")),t.reset(),a.appendChild(T())})),n}())}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,