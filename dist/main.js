(()=>{"use strict";var n={904:(n,t,e)=>{e.d(t,{c:()=>A});var a=e(648),o=e.n(a),r=e(312),i=e.n(r)()(o());i.push([n.id,'* {\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n}\n\nbody {\n    font-size: 16px;\n    height: 100vh;\n    width: 100vw;\n    margin: 0;\n    \n    display: grid;\n    grid-template: auto 1fr auto / 1fr 4fr;\n    grid-auto-rows: 0;\n}\n\nbutton {\n    cursor: pointer;\n}\n\n/* ---------------------------- HEADER ---------------------------- */\n\nheader {\n    background-color: firebrick;\n    padding: 20px 30px;\n\n    display: flex;\n    justify-content: space-between;\n\n    grid-area: 1 / 1 / 2 / 3;\n}\n\nheader div:first-child {\n    display: flex;\n    align-items: center;\n    gap: 20px;\n}\n\nheader div:first-child img {\n    width: 24px;\n    height: auto;\n}\n\n.site-logo {\n    width: 200px;\n    height: auto;\n}\n\n.dark-mode-toggle {\n\n}\n\n/* ---------------------------- SIDEBAR ---------------------------- */\n\n.sidebar {\n    background-color: #DDDDDD;\n    padding: 20px 24px;\n\n    grid-area: 2 / 1 / 3 / 2;\n\n    display: flex;\n    flex-direction: column;\n    gap: 40px;\n}\n\n.sidebar h2 {\n    font-size: 1.6rem;\n    margin: 21px 0 16px;\n}\n\n.sidebar h2::after {\n    content: "";\n    display: block;\n    width: 100%;\n    height: 3px;\n    background-color: black;\n    margin-top: 10px;\n}\n\n.sidebar button.project-list {\n    background: none;\n    border: none;\n    font-size: 1rem;\n    width: 100%;\n    padding: 17px 13px;\n\n    display: flex;\n    align-items: center;\n    gap: 14px;\n}\n\n.sidebar button.project-list:hover {\n    background-color: #CCCCCC;\n}\n\n.sidebar .nav-icon {\n    width: 21px;\n    height: auto;\n}\n\n.sidebar .button-title {\n    margin: 0;\n}\n\n/* ---------------------------- CONTENT ---------------------------- */\n\nsection {\n    padding: 100px 0 0 0;\n    \n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 20px;\n    \n    grid-area: 2 / 2 / 3 / 3;\n}\n\nsection > div {\n    width: min(80%, 800px);\n\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.task-card {\n    border: none;\n    border-bottom: 1px solid #D3D3D3;\n    background: none;\n    width: 100%;\n    padding: 0 0 10px 0;\n    \n    display: grid;\n    grid-template: auto auto / auto 1fr;\n    column-gap: 15px;\n    row-gap: 15px;\n}\n\n.task-checkbox {\n    padding: 9px;\n    border-radius: 20px;\n    border: 1px solid #2c2c2c;\n    \n    grid-area: 1 / 1 / 3 / 2;\n}\n\n.task-title {\n    margin: 0;\n    justify-self: start;\n    \n    grid-area: 1 / 2 / 2 / 3;\n}\n\n.task-info-labels {\n    display: grid;\n    grid-template-columns: auto 1fr auto;\n    column-gap: 10px;\n    \n    grid-area: 2 / 2 / 3 / 3;\n}\n\n.task-info-labels button {\n    border: none;\n    background: none;\n}\n\n.task-due-date {\n    padding: 0;\n}\n\n.task-labels {\n    display: flex;\n    justify-content: start;\n    gap: 10px;\n}\n\n.task-labels button {\n    padding: 0;\n\n    display: flex;\n    align-items: center;\n    gap: 5px;\n}\n\n.task-labels button img {\n    width: 15px;\n    height: auto;\n}\n\n.task-labels button p {\n    color: #294C29;\n    font-size: 0.8rem;\n    margin: 0;\n}\n\n.task-project {\n    \n}\n\n/* ---------------------------- FOOTER ---------------------------- */\n\nfooter {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: maroon;\n    color: white;\n    \n    grid-area: 3 / 1 / 4 / 3;\n}\n\nfooter a {\n    text-decoration: none;\n    \n    display: flex;\n    gap: 8px;\n    align-items: center;\n    justify-content: center;\n}\n\nfooter a p {\n    text-decoration: none;\n    color: white;\n}\n\nfooter img {\n    width: 30px;\n    height: auto;\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,2BAA2B;IAC3B,8BAA8B;AAClC;;AAEA;IACI,eAAe;IACf,aAAa;IACb,YAAY;IACZ,SAAS;;IAET,aAAa;IACb,sCAAsC;IACtC,iBAAiB;AACrB;;AAEA;IACI,eAAe;AACnB;;AAEA,qEAAqE;;AAErE;IACI,2BAA2B;IAC3B,kBAAkB;;IAElB,aAAa;IACb,8BAA8B;;IAE9B,wBAAwB;AAC5B;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,YAAY;AAChB;;AAEA;;AAEA;;AAEA,sEAAsE;;AAEtE;IACI,yBAAyB;IACzB,kBAAkB;;IAElB,wBAAwB;;IAExB,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,iBAAiB;IACjB,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,cAAc;IACd,WAAW;IACX,WAAW;IACX,uBAAuB;IACvB,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,YAAY;IACZ,eAAe;IACf,WAAW;IACX,kBAAkB;;IAElB,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,SAAS;AACb;;AAEA,sEAAsE;;AAEtE;IACI,oBAAoB;;IAEpB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,SAAS;;IAET,wBAAwB;AAC5B;;AAEA;IACI,sBAAsB;;IAEtB,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,gCAAgC;IAChC,gBAAgB;IAChB,WAAW;IACX,mBAAmB;;IAEnB,aAAa;IACb,mCAAmC;IACnC,gBAAgB;IAChB,aAAa;AACjB;;AAEA;IACI,YAAY;IACZ,mBAAmB;IACnB,yBAAyB;;IAEzB,wBAAwB;AAC5B;;AAEA;IACI,SAAS;IACT,mBAAmB;;IAEnB,wBAAwB;AAC5B;;AAEA;IACI,aAAa;IACb,oCAAoC;IACpC,gBAAgB;;IAEhB,wBAAwB;AAC5B;;AAEA;IACI,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,UAAU;;IAEV,aAAa;IACb,mBAAmB;IACnB,QAAQ;AACZ;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,cAAc;IACd,iBAAiB;IACjB,SAAS;AACb;;AAEA;;AAEA;;AAEA,qEAAqE;;AAErE;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,wBAAwB;IACxB,YAAY;;IAEZ,wBAAwB;AAC5B;;AAEA;IACI,qBAAqB;;IAErB,aAAa;IACb,QAAQ;IACR,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA;IACI,qBAAqB;IACrB,YAAY;AAChB;;AAEA;IACI,WAAW;IACX,YAAY;AAChB",sourcesContent:['* {\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n}\n\nbody {\n    font-size: 16px;\n    height: 100vh;\n    width: 100vw;\n    margin: 0;\n    \n    display: grid;\n    grid-template: auto 1fr auto / 1fr 4fr;\n    grid-auto-rows: 0;\n}\n\nbutton {\n    cursor: pointer;\n}\n\n/* ---------------------------- HEADER ---------------------------- */\n\nheader {\n    background-color: firebrick;\n    padding: 20px 30px;\n\n    display: flex;\n    justify-content: space-between;\n\n    grid-area: 1 / 1 / 2 / 3;\n}\n\nheader div:first-child {\n    display: flex;\n    align-items: center;\n    gap: 20px;\n}\n\nheader div:first-child img {\n    width: 24px;\n    height: auto;\n}\n\n.site-logo {\n    width: 200px;\n    height: auto;\n}\n\n.dark-mode-toggle {\n\n}\n\n/* ---------------------------- SIDEBAR ---------------------------- */\n\n.sidebar {\n    background-color: #DDDDDD;\n    padding: 20px 24px;\n\n    grid-area: 2 / 1 / 3 / 2;\n\n    display: flex;\n    flex-direction: column;\n    gap: 40px;\n}\n\n.sidebar h2 {\n    font-size: 1.6rem;\n    margin: 21px 0 16px;\n}\n\n.sidebar h2::after {\n    content: "";\n    display: block;\n    width: 100%;\n    height: 3px;\n    background-color: black;\n    margin-top: 10px;\n}\n\n.sidebar button.project-list {\n    background: none;\n    border: none;\n    font-size: 1rem;\n    width: 100%;\n    padding: 17px 13px;\n\n    display: flex;\n    align-items: center;\n    gap: 14px;\n}\n\n.sidebar button.project-list:hover {\n    background-color: #CCCCCC;\n}\n\n.sidebar .nav-icon {\n    width: 21px;\n    height: auto;\n}\n\n.sidebar .button-title {\n    margin: 0;\n}\n\n/* ---------------------------- CONTENT ---------------------------- */\n\nsection {\n    padding: 100px 0 0 0;\n    \n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 20px;\n    \n    grid-area: 2 / 2 / 3 / 3;\n}\n\nsection > div {\n    width: min(80%, 800px);\n\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.task-card {\n    border: none;\n    border-bottom: 1px solid #D3D3D3;\n    background: none;\n    width: 100%;\n    padding: 0 0 10px 0;\n    \n    display: grid;\n    grid-template: auto auto / auto 1fr;\n    column-gap: 15px;\n    row-gap: 15px;\n}\n\n.task-checkbox {\n    padding: 9px;\n    border-radius: 20px;\n    border: 1px solid #2c2c2c;\n    \n    grid-area: 1 / 1 / 3 / 2;\n}\n\n.task-title {\n    margin: 0;\n    justify-self: start;\n    \n    grid-area: 1 / 2 / 2 / 3;\n}\n\n.task-info-labels {\n    display: grid;\n    grid-template-columns: auto 1fr auto;\n    column-gap: 10px;\n    \n    grid-area: 2 / 2 / 3 / 3;\n}\n\n.task-info-labels button {\n    border: none;\n    background: none;\n}\n\n.task-due-date {\n    padding: 0;\n}\n\n.task-labels {\n    display: flex;\n    justify-content: start;\n    gap: 10px;\n}\n\n.task-labels button {\n    padding: 0;\n\n    display: flex;\n    align-items: center;\n    gap: 5px;\n}\n\n.task-labels button img {\n    width: 15px;\n    height: auto;\n}\n\n.task-labels button p {\n    color: #294C29;\n    font-size: 0.8rem;\n    margin: 0;\n}\n\n.task-project {\n    \n}\n\n/* ---------------------------- FOOTER ---------------------------- */\n\nfooter {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: maroon;\n    color: white;\n    \n    grid-area: 3 / 1 / 4 / 3;\n}\n\nfooter a {\n    text-decoration: none;\n    \n    display: flex;\n    gap: 8px;\n    align-items: center;\n    justify-content: center;\n}\n\nfooter a p {\n    text-decoration: none;\n    color: white;\n}\n\nfooter img {\n    width: 30px;\n    height: auto;\n}'],sourceRoot:""}]);const A=i},312:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",a=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),a&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),a&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,a,o,r){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(a)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(i[s]=!0)}for(var d=0;d<n.length;d++){var c=[].concat(n[d]);a&&i[c[0]]||(void 0!==r&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=r),e&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=e):c[2]=e),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),t.push(c))}},t}},648:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),r="/*# ".concat(o," */");return[t].concat([r]).join("\n")}return[t].join("\n")}},596:n=>{var t=[];function e(n){for(var e=-1,a=0;a<t.length;a++)if(t[a].identifier===n){e=a;break}return e}function a(n,a){for(var r={},i=[],A=0;A<n.length;A++){var s=n[A],d=a.base?s[0]+a.base:s[0],c=r[d]||0,l="".concat(d," ").concat(c);r[d]=c+1;var p=e(l),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)t[p].references++,t[p].updater(u);else{var g=o(u,a);a.byIndex=A,t.splice(A,0,{identifier:l,updater:g,references:1})}i.push(l)}return i}function o(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,o){var r=a(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<r.length;i++){var A=e(r[i]);t[A].references--}for(var s=a(n,o),d=0;d<r.length;d++){var c=e(r[d]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}r=s}}},176:n=>{var t={};n.exports=function(n,e){var a=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(e)}},808:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},120:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},520:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var a="";e.supports&&(a+="@supports (".concat(e.supports,") {")),e.media&&(a+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(a+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),a+=e.css,o&&(a+="}"),e.media&&(a+="}"),e.supports&&(a+="}");var r=e.sourceMap;r&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(a,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},936:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}}},t={};function e(a){var o=t[a];if(void 0!==o)return o.exports;var r=t[a]={id:a,exports:{}};return n[a](r,r.exports,e),r.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var a in t)e.o(t,a)&&!e.o(n,a)&&Object.defineProperty(n,a,{enumerable:!0,get:t[a]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),(()=>{var n;e.g.importScripts&&(n=e.g.location+"");var t=e.g.document;if(!n&&t&&(t.currentScript&&(n=t.currentScript.src),!n)){var a=t.getElementsByTagName("script");if(a.length)for(var o=a.length-1;o>-1&&!n;)n=a[o--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=n})(),e.nc=void 0,(()=>{const n=e.p+"d34d4ca6fe13822869cf.png",t=e.p+"8bd394fe4a75758835b7.png",a=e.p+"4c27d32139ea0789a49d.png",o=e.p+"d08f152b337f95957671.png",r=e.p+"a9004bf4b1008df3c369.png",i=e.p+"15861cfbc1f6bbf1008b.png",A=e.p+"dd56fb41e9c13dd32065.png",s=e.p+"2e069029dc4ce2839da1.png";function d(){return localStorage.getItem("allProjects")?void 0:JSON.parse(localStorage.getItem("allProjects"))}const c=e.p+"b395302003c62cd3c818.png",l=e.p+"e3a9649561cdc6abb958.png",p={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let u;const g=new Uint8Array(16);function m(){if(!u&&(u="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!u))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return u(g)}const b=[];for(let n=0;n<256;++n)b.push((n+256).toString(16).slice(1));const h=function(n,t,e){if(p.randomUUID&&!t&&!n)return p.randomUUID();const a=(n=n||{}).random||(n.rng||m)();if(a[6]=15&a[6]|64,a[8]=63&a[8]|128,t){e=e||0;for(let n=0;n<16;++n)t[e+n]=a[n];return t}return function(n,t=0){return b[n[t+0]]+b[n[t+1]]+b[n[t+2]]+b[n[t+3]]+"-"+b[n[t+4]]+b[n[t+5]]+"-"+b[n[t+6]]+b[n[t+7]]+"-"+b[n[t+8]]+b[n[t+9]]+"-"+b[n[t+10]]+b[n[t+11]]+b[n[t+12]]+b[n[t+13]]+b[n[t+14]]+b[n[t+15]]}(a)},C={addTask(n){this.tasks.push(n)}},f={removeTask(n){let t=this.tasks.findIndex((t=>t.id==n.id));-1!=t&&this.tasks.splice(t,1)}};class I{constructor(n,t,e){const a=h();Object.defineProperty(this,"_id",{value:a,writable:!1,enumerable:!0,configurable:!1}),this._title=n,this._colour=t,this.addToFavourites=e,this.tasks=[]}get id(){return this._id}get title(){return this._title}set title(n){this._title=n}get colour(){return this._colour}set colour(n){this._colour=n}}Object.assign(I.prototype,C),Object.assign(I.prototype,f);const B={addLabel(n){this.labels.push(n)}};class x{constructor(n,t,e,a){this.id=h(),this.title=n,this.description=t,this.dueDate=new Date(e),this.priority=a,this.labels=[],this.associatedProject,this.completed=!1}}Object.assign(x.prototype,(function(n){})),Object.assign(x.prototype,B);var E=e(596),y=e.n(E),v=e(520),w=e.n(v),k=e(176),S=e.n(k),j=e(120),T=e.n(j),D=e(808),L=e.n(D),Y=e(936),z=e.n(Y),U=e(904),W={};W.styleTagTransform=z(),W.setAttributes=T(),W.insert=S().bind(null,"head"),W.domAPI=w(),W.insertStyleElement=L(),y()(U.c,W),U.c&&U.c.locals&&U.c.locals,function(){const e=document.querySelector("body"),p=new I("Test Project","black",!1),u=new x("Sample Task 1","This is the first test task.",new Date,"High"),g=new x("Sample Task 2","This is the second test task.",new Date,"Low");u.addLabel("Test label 1"),u.addLabel("Test label 2"),g.addLabel("Test label 1"),g.addLabel("Test label 2"),p.addTask(u),p.addTask(g),console.log(u),console.log(p),e.appendChild(function(){const e=document.createElement("header"),r=new Image,i=new Image,A=new Image;r.src=n,i.src=t,A.src=a;const s=document.createElement("div");s.appendChild(r),s.appendChild(A);const d=new Image;d.src=o,d.classList.add("site-logo");const c=document.createElement("button");return c.classList.add("dark-mode-toggle"),e.appendChild(s),e.appendChild(d),e.appendChild(c),e}()),e.appendChild(function(){const n=document.createElement("nav");n.classList.add("sidebar");const t=document.createElement("div"),e=document.createElement("h2");e.textContent="Home",t.appendChild(e);const a=["All tasks","Today","This week"],o=[r,i,A];for(let n=0;n<a.length;n++){const e=document.createElement("button");e.classList.add("project-list");const r=new Image;r.src=o[n],r.classList.add("nav-icon");const i=document.createElement("p");i.textContent=`${a[n]}`,i.classList.add("button-title"),e.appendChild(r),e.appendChild(i),t.appendChild(e)}const c=document.createElement("div"),l=document.createElement("h2");return l.textContent="Your Projects",c.appendChild(l),d()&&d().map((n=>n.title)).forEach((n=>{const t=document.createElement("button");t.classList.add("project-list");const e=new Image;e.src=s,e.classList.add("nav-icon");const a=document.createElement("p");a.textContent=n,a.classList.add("button-title"),t.appendChild(e),t.appendChild(a),c.appendChild(t)})),n.appendChild(t),n.appendChild(c),n}()),e.appendChild(function(n){const t=document.createElement("section"),e=document.createElement("h2");e.classList.add("project-title"),e.textContent=`${n.title}`;const a=document.createElement("div");return n.tasks.forEach((t=>{const e=document.createElement("button");e.classList.add("task-card");const o=document.createElement("button");o.classList.add("task-checkbox"),e.appendChild(o);const r=document.createElement("h3");r.classList.add("task-title"),r.textContent=`${t.title}`,e.appendChild(r);const i=document.createElement("div");i.classList.add("task-info-labels"),e.appendChild(i);const A=document.createElement("button");var s;A.classList.add("task-due-date"),A.textContent=`${(s=t.dueDate).getDate().toString().padStart(2,"0")} ${s.toLocaleString("en-sg",{month:"short"})} '${s.getFullYear().toString().substr(-2)}`,i.appendChild(A);const d=document.createElement("div");d.classList.add("task-labels"),t.labels.forEach((n=>{const t=document.createElement("button"),e=new Image;e.src=c,t.appendChild(e);const a=document.createElement("p");a.textContent=n,t.appendChild(a),d.appendChild(t)})),i.appendChild(d);const l=document.createElement("button");l.classList.add("task-project"),l.textContent=n.title,i.appendChild(l),a.appendChild(e)})),t.appendChild(e),t.appendChild(a),t}(p)),e.appendChild(function(){const n=document.createElement("footer"),t=document.createElement("a");t.setAttribute("href","https://github.com/reezuan"),t.setAttribute("target","_blank"),t.setAttribute("rel","noopener noreferrer");const e=document.createElement("p");e.textContent="Made by reezuan",t.appendChild(e);const a=new Image;return a.src=l,a.setAttribute("alt","Github logo"),t.appendChild(a),n.appendChild(t),n}())}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,